<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX1C70EE220A0C40E787DCF132C9FE5607">
		<Properties>
			<bool name="AllowThirdPartySales">false</bool>
			<token name="AnimationWeightedBlendFix">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="ClientAnimatorThrottling">0</token>
			<string name="CollisionGroups">Default^0^-1</string>
			<Ref name="CurrentCamera">RBX0A6569B76F5F44B0BC8C67E135CD7169</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<float name="Gravity">196.199997</float>
			<token name="HumanoidOnlySetCollisionsOnStateChange">0</token>
			<token name="InterpolationThrottling">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PhysicsSteppingMethod">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="Retargeting">0</token>
			<token name="SignalBehavior">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<int name="StreamingMinRadius">64</int>
			<token name="StreamingPauseMode">0</token>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBX0A6569B76F5F44B0BC8C67E135CD7169">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>-48.2709579</X>
					<Y>32.0614052</Y>
					<Z>-129.443878</Z>
					<R00>-0.973273396</R00>
					<R01>0.113408439</R01>
					<R02>-0.199693561</R02>
					<R10>-7.4505806e-09</R10>
					<R11>0.869557202</R11>
					<R12>0.49383229</R12>
					<R20>0.229649723</R20>
					<R21>0.480633825</R21>
					<R22>-0.846316814</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>-47.8715706</X>
					<Y>31.07374</Y>
					<Z>-127.751244</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXAB397CD05CEC442086AA2B23352A87C2">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284636770</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<Ref name="MaterialVariant">null</Ref>
				<string name="Name">Baseplate</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>20</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBX3A52F1B5AACB454CB3B6CE8D4ED5CBD6">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">false</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<Ref name="MaterialVariant">null</Ref>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0500000007</R>
					<G>0.330000013</G>
					<B>0.360000014</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBXB7A2965FB83846CE85908BFD9BA84DF5">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Spawns</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Part" referent="RBX7E20BB9675704BE987C353CEBC0BE429">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>13</X>
						<Y>0.5</Y>
						<Z>-20</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">false</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Ref name="MaterialVariant">null</Ref>
					<string name="Name">Spawn1</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>40</X>
						<Y>1</Y>
						<Z>36</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX034AC7E1105E4C00B6CAFE2ED2CB331B">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-32</X>
						<Y>0.5</Y>
						<Z>-20</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">false</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Ref name="MaterialVariant">null</Ref>
					<string name="Name">Spawn2</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>40</X>
						<Y>1</Y>
						<Z>36</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBXB2DBE5FBB9E74F32A2D62D3B990FF230">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-77</X>
						<Y>0.5</Y>
						<Z>-20</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">false</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Ref name="MaterialVariant">null</Ref>
					<string name="Name">Spawn3</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>40</X>
						<Y>1</Y>
						<Z>36</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBXDB40C999A12C407FA275087607A3D403">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-122</X>
						<Y>0.5</Y>
						<Z>-20</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">false</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Ref name="MaterialVariant">null</Ref>
					<string name="Name">Spawn4</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>40</X>
						<Y>1</Y>
						<Z>36</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="SpawnLocation" referent="RBXD80B8CFFA71241AD9ECCCDCCE78936E0">
			<Properties>
				<bool name="AllowTeamChangeOnTouch">false</bool>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-34</X>
					<Y>0.5</Y>
					<Z>-62</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<int name="Duration">10</int>
				<bool name="Enabled">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<Ref name="MaterialVariant">null</Ref>
				<string name="Name">SpawnLocation</string>
				<bool name="Neutral">true</bool>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">194</int>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>12</X>
					<Y>1</Y>
					<Z>12</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBX2CD0D3E4157B4B02817054372F653A5F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Color3 name="Color3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<token name="Face">1</token>
					<string name="Name">Decal</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxasset://textures/SpawnLocation.png</url></Content>
					<float name="Transparency">0</float>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="SurfaceGui" referent="RBX592D4A1E4526486FB0317EA98C9D0706">
			<Properties>
				<bool name="Active">true</bool>
				<Ref name="Adornee">null</Ref>
				<bool name="AlwaysOnTop">false</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<float name="Brightness">1</float>
				<Vector2 name="CanvasSize">
					<X>800</X>
					<Y>600</Y>
				</Vector2>
				<bool name="ClipsDescendants">true</bool>
				<bool name="Enabled">true</bool>
				<token name="Face">1</token>
				<float name="LightInfluence">1</float>
				<string name="Name">SurfaceGui</string>
				<float name="PixelsPerStud">50</float>
				<bool name="ResetOnSpawn">true</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<token name="SizingMode">1</token>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="ToolPunchThroughDistance">0</float>
				<token name="ZIndexBehavior">1</token>
				<float name="ZOffset">0</float>
			</Properties>
			<Item class="Frame" referent="RBX5BFA46BF3A254835A37DFBE26360D8F1">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0</R>
						<G>1</G>
						<B>0.200000018</B>
					</Color3>
					<float name="BackgroundTransparency">0.699999988</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Frame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBXFA1D08B8112D43D0BF7A3671D6B8616A">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX39D7330632B54478B229819775E726F8">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX24E51D5A443145FF828554EC499B7701">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX0CA9AE9E682D40FFB9FD61767654DAA9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">false</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX411DA002A37349BDA707420D369D8C95">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX0DBDB9E3C4B04EF6A8A9345764D88A87">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CharacterAutoLoads">false</bool>
			<int name="MaxPlayersInternal">12</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
			<float name="RespawnTime">5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX9EE4046E7A56460EB2126DDC501C5960">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX8FB2953B93944E23A573BDE137166975">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="PermissionsService" referent="RBX53AB1B9ECDC046E2A00A6DF30860D00A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX69813C7235F741D39B3CDAD6ABB90025">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CustomPoliciesEnabled">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBX2D22A8110BDF46AA8E79C62A831060D5">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<int64 name="CommitInflightAuthorId">0</int64>
			<string name="CommitInflightGuid"></string>
			<int name="CommitInflightPlaceVersion">0</int>
			<bool name="EnableScriptCollabByDefaultOnLoad">false</bool>
			<bool name="EnableTeamCreateStreamingOnLoad">false</bool>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<int64 name="SrcPlaceId">7619626087</int64>
			<int64 name="SrcUniverseId">2960167743</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBXD37EE7CBE77E423292058F488770CCDD">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">16</float>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX389444865A8F49C8BF470A7426A25BAD">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="LocalScript" referent="RBXC415C558F76747FD9AC15766B6312A8A">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Client</string>
					<string name="ScriptGuid">{4A3AE593-2F04-4CF2-A4C2-8EE2CA2AE097}</string>
					<ProtectedString name="Source">print(&quot;Hello world, from client!&quot;)</ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="LocalScript" referent="RBX9DFD3F8F58044CBAB75B0BFB7D022A16">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ClientPlacing</string>
						<string name="ScriptGuid">{4B042CF2-B582-4BE2-8180-28D64684734F}</string>
						<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService('ReplicatedStorage') -- to define the RemoteEvent

-- Wait for message from Select remote event, triggered by guibutton
ReplicatedStorage:WaitForChild('Select').OnClientEvent:Connect(function(tycoon, id, uuid, cost)
    local module = require(game.ReplicatedStorage.Common:FindFirstChild("PlacementSystem"))

    -- Run placement system module
    local newComp = module.new(tycoon, id, uuid, cost)
    newComp:Init()
end)]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX8A8D13E56D914443B9CC75E1FB4201D2">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXDA3F9941D7F246C18D2A4DA392FD2CE4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX42F3DCC943124CFE8531324C4ADA4905">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="VirtualCursorMode">0</token>
		</Properties>
		<Item class="ScreenGui" referent="RBX2B7CFF99A9704483B76B786DC07F76BD">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<int name="DisplayOrder">0</int>
				<bool name="Enabled">true</bool>
				<bool name="IgnoreGuiInset">false</bool>
				<string name="Name">ShopGui</string>
				<bool name="ResetOnSpawn">true</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<token name="ZIndexBehavior">1</token>
			</Properties>
			<Item class="Frame" referent="RBXD8AEAE7993ED4F4DBE642ED33B003C10">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Frame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.0683760718</XS>
						<XO>0</XO>
						<YS>0.664753199</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>199</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextButton" referent="RBXA79E4CF0B700464EB08DB1709BFC9001">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize">AgAAAAQAAABDb3N0BQAAAAACAAAASWQCCAAAAERlbW9QYXJ0</BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">Testing</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags">R3VpQnV0dG9u</BinaryString>
						<string name="Text">Odd Part</string>
						<Color3 name="TextColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextButton" referent="RBX8DEFE38C00A04584B04EE7CBDE404DB2">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize">AgAAAAQAAABDb3N0BQAAAAACAAAASWQCCQAAAERlbW9QYXJ0Mg==</BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">Testing2</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags">R3VpQnV0dG9u</BinaryString>
						<string name="Text">Even Part</string>
						<Color3 name="TextColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXFCA62AD1906844E39DC29658F04F767F">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.105527639</XS>
							<XO>0</XO>
							<YS>1.08000004</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>157</XO>
							<YS>0</YS>
							<YO>19</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Press R to rotate while placing</string>
						<Color3 name="TextColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="ScreenGui" referent="RBXA5FF409FE4914F21BEE3FAAB41575AC8">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<int name="DisplayOrder">0</int>
				<bool name="Enabled">true</bool>
				<bool name="IgnoreGuiInset">false</bool>
				<string name="Name">SettingsGui</string>
				<bool name="ResetOnSpawn">true</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<token name="ZIndexBehavior">1</token>
			</Properties>
			<Item class="Frame" referent="RBXB17E216E6BE74D70AE7337F6711B35DD">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Frame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.0683760718</XS>
						<XO>0</XO>
						<YS>0.893226206</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>199</XO>
						<YS>0</YS>
						<YO>49</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextButton" referent="RBXFD96E88C5E234172BC26E1B9812505D3">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize">AQAAAAIAAABJZAYAAAAAAAAAAA==</BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<bool name="Modal">false</bool>
						<string name="Name">ClearPlaceables</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags">R3VpQnV0dG9u</BinaryString>
						<string name="Text">Clear Placed Objects</string>
						<Color3 name="TextColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LocalizationService" referent="RBX6B7719A4EC4C4FA0A0A5F3BA261B1B21">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX0D74B2A9E80B4973859F74398CE2DA04">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX29B26328AA294AF1BE04709FE9516279">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBX01DAB6CD8DD64A738366B889AA88E5C4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX2A4356F98FEC40F5BAAEA554F5E389ED">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Geometry</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBX98505FCD3F474BD3B883811C6FBF89A9">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="StringValue" referent="RBX5D7E66428CAC426481C31689CAFB44DB">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<string name="Value">{AF6C7713-119A-4487-B5FC-91D5FEB2DBD6}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBXAEF4C3E5948342F58571EB45DBD1493D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX51A1FDBCB8E84FE6AED8CDF34A17E4EB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX47F76761A76544E4B4DD8E40E5DA8F57">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBXC8F12063D4794EA4A4C69C40536D53CB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX56F023615579496D8F2F7438A10894E9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4F3068165C144AF597AC29E12B8E5ABC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX9B3050AAF9684869A34E4ADF85D75859">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBX3AA5B88AF2EC479F87C6B1953AA762E8">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="AnalyticsService" referent="RBXC19FAA06CC824236A9C3A9D6C19AF655">
		<Properties>
			<string name="ApiKey"></string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">AnalyticsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="ModuleScript" referent="RBX4AA66EA1B0C94A4B9B301C063E2B3947">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RobloxLSP_Settings</string>
				<string name="ScriptGuid">{D3B5B015-EB94-4341-B8F4-998464BB7527}</string>
				<ProtectedString name="Source"><![CDATA[return {
	port = 27843,
	startAutomatically = false,
	exclude = {
		-- game:GetService("Workspace")
	}
}]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
	<Item class="Selection" referent="RBXECD4435561514C0DAD93D71016BBD9A0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX1E2B4C1AB9A54AF2B320147EFC848947">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Script" referent="RBX2D0557D1E0714C0CB5D37BB2458A6246">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Server</string>
				<string name="ScriptGuid">{90B8076A-6E99-4AE1-A45D-93D50FAF5C4E}</string>
				<ProtectedString name="Source"><![CDATA[local Tycoon = require(script.Tycoon)
local PlayerManager = require(script.PlayerManager)
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local placeablesFolder = ReplicatedStorage.Placeables
local bindableEvent = game.ServerStorage.ServerToButton
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local function FindSpawn()
	local debounce = false

	repeat wait() until not debounce
	debounce = true

	-- loop through parts in spawns folder
	-- no failsafe for more players than spawns
	for _, spawnPoint in ipairs(workspace.Spawns:GetChildren()) do
		if not spawnPoint:GetAttribute("Occupied") then
			print(spawnPoint.Name)
			debounce = false
			return spawnPoint
		end
	end

	warn("No unoccupied spawns")
	debounce = false
end

PlayerManager.Start()




-- https://devforum.roblox.com/t/roblox-to-trello-guide/151887
local TrelloAPI = require(game.ServerScriptService:WaitForChild("TrelloAPI"))

--  Get Trello Board
local BoardID = TrelloAPI:GetBoardID("RobloxPlacementSystemData")

-- Use different list for studio/deployment
local ListID
if RunService:IsStudio() then
	ListID = TrelloAPI:GetListID("Studio",BoardID)
else
	ListID = TrelloAPI:GetListID("Visitors",BoardID)
end

-- Adds name, date, join/leave to desired trello list
local function StoreVisitInfo(playerName, joinOrLeave)
	local dateTimeString = os.date("%x %X", os.time())

	-- Create card in the list
	local cardTitle = playerName .. "; " .. dateTimeString .. "; " .. joinOrLeave
	local NewCard = TrelloAPI:AddCard(cardTitle, "", ListID)
end

-- Create new tycoon when player joins
PlayerManager.PlayerAdded:Connect(function(player)
	local tycoon = Tycoon.new(player, FindSpawn())
	tycoon:Init()
	StoreVisitInfo(player.Name, "Join")
end)

Players.PlayerRemoving:Connect(function(player)
	StoreVisitInfo(player.Name, "Leave")
end)














-- Object placement
-- Waiting for client to fire RemoteEvent

-- placePosition is position relative to min x and min z of the base
ReplicatedStorage:WaitForChild('Place').OnServerEvent:Connect(function(player, placePosition, rotation, totalRotation, placeableId, tycoon, uuid)
	-- Check PlacedItems data to ensure id + uuid aren't already placed
	local data = PlayerManager.GetPlacedItems(player)
	print(data)

	for _, itemArray in ipairs(data) do
		if table.find(itemArray, uuid) then 
			error("Item " .. uuid .. "already placed")
			return 
		end
	end
	print("UUID unique, placing...")

	-- if data and table.find(data.placedItems, uuid) then
	-- 	error("Item " .. uuid .. "already placed")
	-- 	return
	-- end

	print(player.Name .. " placed Id " .. placeableId .. " at ", placePosition, " (relative)")

	-- Get real position to place at
	local basePosition = tycoon.Model.Base.Position
	local baseSize = tycoon.Model.Base.Size
	local baseXMin = basePosition.X - baseSize.X / 2
	local baseZMin = basePosition.Z - baseSize.Z / 2
	local realPos = CFrame.new(baseXMin + placePosition.X, placePosition.Y, baseZMin + placePosition.Z) * rotation

	local Placeable = placeablesFolder:FindFirstChild(placeableId)
	local PlaceableClone = Placeable:Clone()
	PlaceableClone.PrimaryPart.CFrame = realPos

	-- Place inside of template group
	PlaceableClone.Parent = tycoon.Model.PlacedObjects

	-- Store in PlayerManager data that this has been placed
	-- Since we use this data to place these items on join also, make sure to remove
	-- the item from data before placing it again
	-- Passes relative pos, not real pos
	PlayerManager.AddPlacedItem(player, placeableId, uuid, placePosition.X, placePosition.Z, totalRotation)

	-- Tell the button that the object has been placed, buton can be re-enabled
	-- local bindableEvent = game.ServerStorage.ServerToButton
	print("Firing event")
	bindableEvent:Fire()
end)]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Folder" referent="RBX2AD3369276124FFDB4A5DFF9D468F65F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">Components</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX37D8814B5B244D029B58CD8D61FC3F8E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PlaceableButton</string>
						<string name="ScriptGuid">{A4DB8B74-BE76-4578-A098-74C189408A74}</string>
						<ProtectedString name="Source"><![CDATA[local PlayerManager = require(script.Parent.Parent.PlayerManager)
--local ReplicatedStorage = game:GetService('ReplicatedStorage') -- to define the RemoteEvent
--local placeablesFolder = ReplicatedStorage.Placeables
local componentFolder = script.Parent
local ReplicatedStorage = game:GetService('ReplicatedStorage') -- to define the RemoteEvent
local HttpService = game:GetService("HttpService")

local PlaceableButton = {}

PlaceableButton.__index = PlaceableButton

function PlaceableButton.new(tycoon, part)
	local self = setmetatable({}, PlaceableButton)
	self.Tycoon = tycoon
	self.Instance = part
	self.ButtonId = self.Instance:GetAttribute("Id")
	self.Cost = self.Instance:GetAttribute("Cost")
	self.bindableEvent = game.ServerStorage.ServerToButton
	
	return self
end

function PlaceableButton:Init()
	print("PlaceableButton init")

	local debounce = false
	local lastClick = 0

	local function onClick()
		-- Use debounce AND tick() to prevent autoclicking
		-- Autoclicking at 1ms gets 3-4 clicks past debounce, tick()
		-- can catch this though
		if not debounce then 
			debounce = true

			local thisClick = tick()
			print(thisClick)
			if thisClick - lastClick < 1 then
				warn("Autoclicking")
				lastClick = thisClick
				debounce = false
				return
			end
			lastClick = thisClick

			self:Press(self.Tycoon.Owner)
			debounce = false
			return
		end
	end

	self.clickDetect = self.Instance.MouseButton1Click:Connect(onClick)

	-- self.Subscription = self.Tycoon:SubscribeTopic("Placement", function(...)
	-- 	self:OnItemPlaced(...)	
	-- end)
end

function PlaceableButton:Press(player, debounce)
	local debounce = false
	if not debounce then
		debounce = true

		local money = PlayerManager.GetMoney(player)

		if player == self.Tycoon.Owner and money >= self.Cost then
			-- Lock button
			self:DisableButton()

			print(player.Name .. " purchased ButtonId: " .. self.ButtonId)
			PlayerManager.SetMoney(player, money - self.Cost)

			-- Generate uuid for the item
			local uuid = HttpService:GenerateGUID(false)

			local selectEvent = ReplicatedStorage:WaitForChild('Select') -- tell client to run module
			selectEvent:FireClient(self.Tycoon.Owner, self.Tycoon, self.ButtonId, uuid, self.Cost)
		end
	end

	-- Unlock button
	local unlockButton
	unlockButton = self.bindableEvent.Event:Connect(function()
		print("Button has heard the event")
		self:EnableButton()
		unlockButton:Disconnect()
	end)
end

function PlaceableButton:DisableButton()
	print("Disabling button")
	self.Instance.Visible = false
end

function PlaceableButton:EnableButton()
	print("Enabling button")
	self.Instance.Visible = true
end

return PlaceableButton
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXEC4C116C1BF04F40A91976B68EDF29D5">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SettingsButton</string>
						<string name="ScriptGuid">{5225220A-0881-4D20-94BF-2B748C0EFCC3}</string>
						<ProtectedString name="Source"><![CDATA[local PlayerManager = require(script.Parent.Parent.PlayerManager)
--local ReplicatedStorage = game:GetService('ReplicatedStorage') -- to define the RemoteEvent
--local placeablesFolder = ReplicatedStorage.Placeables
local componentFolder = script.Parent
local ReplicatedStorage = game:GetService('ReplicatedStorage') -- to define the RemoteEvent
local HttpService = game:GetService("HttpService")

local SettingsButton = {}

SettingsButton.__index = SettingsButton

function SettingsButton.new(tycoon, part)
	local self = setmetatable({}, SettingsButton)
	self.Tycoon = tycoon
	self.Instance = part
	self.ButtonId = self.Instance:GetAttribute("Id")
	print("run")
	print(self)
	print("\n\n")
	return self
end

function SettingsButton:Init()
	print("SettingsButton init")

	local debounce = false
	local lastClick = 0

	local function onClick()
		-- Use debounce AND tick() to prevent autoclicking
		-- Autoclicking at 1ms gets 3-4 clicks past debounce, tick()
		-- can catch this though
		if not debounce then 
			debounce = true

			local thisClick = tick()
			print(thisClick)
			if thisClick - lastClick < 1 then
				warn("Autoclicking")
				lastClick = thisClick
				debounce = false
				return
			end
			lastClick = thisClick

			print("Button press")
			self:Press(self.Tycoon.Owner)
			debounce = false
			return
		end
	end

	self.clickDetect = self.Instance.MouseButton1Click:Connect(onClick)
end

function SettingsButton:Press(player, debounce)
	local debounce = false
	if not debounce then
		debounce = true


		if self.ButtonId == 0 then -- Clear placed objects
			print("Clearing placed objects")
			self:ClearPlacedObjects(player)
		end

		-- if player == self.Tycoon.Owner then
			
		-- end
		debounce = false
	end
end

function SettingsButton:DisableButton()
	print("Disabling button")
	self.Instance.Visible = false
end

function SettingsButton:EnableButton()
	print("Enabling button")
	self.Instance.Visible = true
end

function SettingsButton:ClearPlacedObjects(player)
	local data = PlayerManager.GetPlacedItems(player)
	local placedItemFolder = self.Tycoon.Model.PlacedObjects

	-- Remove physical items
	for _, item in ipairs(placedItemFolder:GetChildren()) do
		item:Destroy()
		print("Destroyed " .. item.Name)
	end

	-- Remove items from placed item data
	for index = 1, #data do
		-- Always use 1 as the index: since we remove the item each iteration
		-- the next item is moved into index 1
		local uuid = data[1][2]

		PlayerManager.RemovePlacedItem(player, uuid)
	end
end

return SettingsButton
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX80C149EB3BF54948BBA91628F04FF8DD">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">PlayerManager</string>
					<string name="ScriptGuid">{76C4F447-097B-4B58-837B-5CCD932E509F}</string>
					<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local DataStoreService = game:GetService("DataStoreService")
local PlayerData = DataStoreService:GetDataStore("PlayerData")

local function LeaderboardSetup(value)
	local leaderstats = Instance.new("Folder")
	leaderstats.Name = "leaderstats"
	
	local money = Instance.new("IntValue")
	money.Name = "Money"
	money.Value = value
	money.Parent = leaderstats
	
	return leaderstats
end

local function LoadData(player)
	local success, result = pcall(function()
		return PlayerData:GetAsync(player.UserId)
	end)
	
	if not success then
		warn(result)
	end
	
	return success, result
end

local function SaveData(player, data)
	local success, result = pcall(function()
		PlayerData:SetAsync(player.UserId, data)
	end)
	
	if not success then
		warn(result)
	end

	return success
end

-- key: player use id, value: data in table
local sessionData = {}

-- call this after onplayeradded
-- cant put in PlayerManager module, so other modules dont need to say .event
-- also they cant fire it, want to keep it so only playermanager can fire it
local playerAdded = Instance.new("BindableEvent")
local playerRemoving = Instance.new("BindableEvent")

local PlayerManager = {}

PlayerManager.PlayerAdded = playerAdded.Event
PlayerManager.PlayerRemoving = playerRemoving.Event

-- hook events to proper functions
function PlayerManager.Start()
	for _, player in ipairs(Players:GetPlayers()) do
		-- coroutune allows multiple tasks to run at same time within same script
		coroutine.wrap(PlayerManager.OnPlayerAdded)(player)
	end
	
	print("PlayerManager started")
	Players.PlayerAdded:Connect(PlayerManager.OnPlayerAdded)
	Players.PlayerRemoving:Connect(PlayerManager.OnPlayerRemoving)
	
	-- runs OnClose function when game is closed
	game:BindToClose(PlayerManager.OnClose)
end

function PlayerManager.OnPlayerAdded(player)
	player.CharacterAdded:Connect(function(character)
		PlayerManager.OnCharacterAdded(player, character)
	end)
	
	local success, data = LoadData(player)
	-- if success, then return data (or new table for default data)
	sessionData[player.UserId] = success and data or {
		Money = 0,
		UnlockIds = {},
		placedItems = {}
	}

	-- Do this for each in case successful load, but mising new data piece
	if not sessionData[player.UserId].placedItems then 
		sessionData[player.UserId].placedItems = {}
	end

	-- TESTING TESTING TESTING TESTING TESTING
	-- Deletes placed item save data
	-- sessionData[player.UserId].placedItems = {}
	-- Deletes all data
	-- sessionData[player.UserId] = {
	-- 	Money = 0,
	-- 	UnlockIds = {},
	-- 	placedItems = {}
	-- }
	
	local leaderstats = LeaderboardSetup(PlayerManager.GetMoney(player))
	leaderstats.Parent = player
	
	playerAdded:Fire(player)
end

function PlayerManager.OnCharacterAdded(player, character)
	local humanoid = character:FindFirstChild("Humanoid")
	
	if humanoid then
		-- check when dies
		humanoid.Died:Connect(function()
			wait(3)
			player:LoadCharacter()
		end)
	end
end

-- leaderstats is responive to our session data, it doesnt define the session data
function PlayerManager.GetMoney(player)
	return sessionData[player.UserId].Money
end

function PlayerManager.SetMoney(player, value)
	if value then
		sessionData[player.UserId].Money = value
		
		local leaderstats = player:FindFirstChild("leaderstats")
		if leaderstats then
			local money = leaderstats:FindFirstChild("Money")

			if money then
				money.Value = value
			end
		end
	end
end

function PlayerManager.AddUnlockId(player, id)
	local data = sessionData[player.UserId]
	
	-- checks for repeats
	if not table.find(data.UnlockIds, id) then
		table.insert(data.UnlockIds, id)
	end
end

function PlayerManager.GetUnlockIds(player)
	return sessionData[player.UserId].UnlockIds
end

function PlayerManager.OnPlayerRemoving(player)
	SaveData(player, sessionData[player.UserId])
	playerRemoving:Fire(player)
end

-- run when game is closing
function PlayerManager.OnClose()
	-- this line could cause trouble with saving in studio, comment it if needed
	-- will certainly work in the normal game though
	if game:GetService("RunService"):IsStudio() then return end
	
	for _, player in ipairs(Players:GetPlayers()) do
		coroutine.wrap(PlayerManager.OnPlayerRemoving(player))()
	end
end




-- TODO: Add rotation
-- When an item is placed down, store it in sessionData with the id and relative coords
function PlayerManager.AddPlacedItem(player, itemId, uuid, relX, relZ,rotY)
	local data = sessionData[player.UserId]
	
	-- checks for repeats
	if not table.find(data.placedItems, {itemId, uuid, relX, relZ, rotY}) then
		table.insert(data.placedItems, {itemId, uuid, relX, relZ, rotY})
	end
end

function PlayerManager.GetPlacedItems(player)
	return sessionData[player.UserId].placedItems
end

function PlayerManager.RemovePlacedItem(player, uuid)
	print(sessionData[player.UserId].placedItems)
	for index, itemArray in ipairs(sessionData[player.UserId].placedItems) do
		if table.find(itemArray, uuid) then 
			print("Removing " .. uuid .. " from PlacedItems")
			table.remove(sessionData[player.UserId].placedItems, index)
			print(sessionData[player.UserId].placedItems)
			print("\n\n\n")
			return
		end
	end
	print("UUID NOT FOUND")
end









return PlayerManager
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXB2680A02E1AB4664BE43EEF3280EFE5F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Tycoon</string>
					<string name="ScriptGuid">{7CF7C5E6-4498-4909-8B66-AF54FC92F539}</string>
					<ProtectedString name="Source"><![CDATA[local CollectionService = game:GetService("CollectionService")
local template = game:GetService("ServerStorage").Template
local componentFolder = script.Parent.Components
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local tycoonStorage = game:GetService("ServerStorage").TycoonStorage
local playerManager = require(script.Parent.PlayerManager)
local ReplicatedStorage = game:GetService('ReplicatedStorage') -- to define the RemoteEvent
local placeablesFolder = ReplicatedStorage.Placeables

-- print("Hello")

-- clone model to given cframe
local function NewModel(model, cframe)
	local newModel = model:Clone()
	newModel:SetPrimaryPartCFrame(cframe)
	newModel.Parent = workspace
	return newModel
end

local Tycoon = {}
-- Whatever class is created, uses this to index it
Tycoon.__index = Tycoon

-- Only defines properties for tycoon
function Tycoon.new(player, spawnPoint)
	-- Creates new table with metatable set to tycoon
	local self = setmetatable({}, Tycoon)
	self.Owner = player
	
	-- _ indicates private, shouldn't be used outside of tycoon class
	self._topicEvent = Instance.new("BindableEvent")
	self._spawn = spawnPoint
	
	return self
end

-- Called after new()
function Tycoon:Init()
	self.Model = NewModel(template, self._spawn.CFrame)

	-- Disable CharacterAutoLoad in game.Players
	self.Owner.RespawnLocation = self.Model.Spawn
	self.Owner:LoadCharacter()
	self._spawn:SetAttribute("Occupied", true)

	-- Get Guis that were distributed by StarterGui
	self.PlayerGui = game:GetService('Players')[self.Owner.Name]:WaitForChild('PlayerGui')
	self.ShopGui = self.PlayerGui.ShopGui
	self.SettingsGui = self.PlayerGui.SettingsGui

	-- Initializite all GuiButtons in the ShopGui
	for _, descendant in pairs(self.ShopGui:GetDescendants()) do
		if descendant:IsA("TextButton") then
			local compModule = require(componentFolder:FindFirstChild("PlaceableButton"))
			local newComp = compModule.new(self, descendant)
			newComp:Init()
		end
	end

	-- Initializite all GuiButtons in the SettingsGui
	for _, descendant in pairs(self.SettingsGui:GetDescendants()) do
		if descendant:IsA("TextButton") then
			local compModule = require(componentFolder:FindFirstChild("SettingsButton"))
			local newComp = compModule.new(self, descendant)
			newComp:Init()
			print(descendant)
		end
	end
	
	self:LockAll()
	self:LoadUnlocks()
	self:WaitForExit()

	self:BuildPlacedItemsData()
	
	print("Tycoon initialized")
end

-- On join, fetch PlacedItems data and build them
function Tycoon:BuildPlacedItemsData()
	local data = playerManager.GetPlacedItems(self.Owner)
	local placeEvent = ReplicatedStorage:WaitForChild('Place')

	for index = 1, #data do
		print(index)
		-- Always use 1 as the index: since we remove the item each iteration
		-- the next item is moved into index 1
		local itemId = data[1][1]
		local uuid = data[1][2]
		local relX = data[1][3]
		local relZ = data[1][4]
		local rotY = data[1][5]

		-- In case not saved
		if not rotY then rotY = 0 end

		-- Remove this piece of data before placing (placement will re-add it)
		print("Removing " .. uuid)
		playerManager.RemovePlacedItem(self.Owner, uuid)

		-- Build the item again
		-- placeEvent:FireServer(position, self.placeableID, self.Tycoon, self.uuid)
		self:BuildSavedItem(itemId, uuid, relX, relZ, rotY)
	end
end

function Tycoon:BuildSavedItem(itemId, uuid, relX, relZ, rotY)
	-- Check PlacedItems data to ensure id + uuid aren't already placed
	local data = playerManager.GetPlacedItems(self.Owner)

	for _, itemArray in ipairs(data) do
		if table.find(itemArray, uuid) then 
			error("Item " .. uuid .. "already placed")
			return 
		end
	end
	print("UUID unique, placing saved part...")

	print(self.Owner.Name .. " placed Id " .. itemId .. " at ", relX, relZ)

	local Placeable = placeablesFolder:FindFirstChild(itemId)

	-- Get real position to place at
	local basePosition = self.Model.Base.Position
	local baseSize = self.Model.Base.Size
	local baseXMin = basePosition.X - baseSize.X / 2
	local baseZMin = basePosition.Z - baseSize.Z / 2
	local baseY = basePosition.Y + baseSize.Y / 2
	local realPos = CFrame.new(baseXMin + relX, baseY + Placeable.Hitbox.Size.Y / 2, baseZMin + relZ)
	local realPos = realPos * CFrame.Angles(0, math.rad(rotY), 0)

	local PlaceableClone = Placeable:Clone()
	PlaceableClone.PrimaryPart.CFrame = realPos

	-- Place inside of template group
	PlaceableClone.Parent = self.Model.PlacedObjects

	-- Store in PlayerManager data that this has been placed
	-- Since we use this data to place these items on join also, make sure to remove
	-- the item from data before placing it again
	-- Passes relative pos, not real pos
	playerManager.AddPlacedItem(self.Owner, itemId, uuid, relX, relZ, rotY)
end

-- on join, load saved unlocks
function Tycoon:LoadUnlocks()
	for _, id in ipairs(playerManager.GetUnlockIds(self.Owner)) do
		-- simulating button press for the unlock
		self:PublishTopic("Button", id)
	end
end

-- Look through everything in Model, lock those with unlockable tag
function Tycoon:LockAll()
	for _, instance in ipairs(self.Model:GetDescendants()) do
		if CollectionService:HasTag(instance, "Unlockable") then
			self:Lock(instance)
		else
			-- spawn it if not an unlockable
			self:AddComponents(instance)
		end
	end
end

function Tycoon:Lock(instance)
	-- spawn in then move to tycoonStorage to retain position info
	instance.Parent = tycoonStorage
	
	-- listen for unlock
	self:CreateComponent(instance, componentFolder.Unlockable)
end

function Tycoon:Unlock(instance, id)
	-- When unlocking object, add it to to table of unlocked ids
	playerManager.AddUnlockId(self.Owner, id)
	
	CollectionService:RemoveTag(instance, "Unlockable")
	self:AddComponents(instance)
	instance.Parent = self.Model
end

function Tycoon:AddComponents(instance)
	-- Get all of the tags on a component
	for _, tag in ipairs(CollectionService:GetTags(instance)) do
		-- safe approach to check if component exists
		local component = componentFolder:FindFirstChild(tag)
		
		if component then
			self:CreateComponent(instance, component)
		end
	end
end

function Tycoon:CreateComponent(instance, componentScript)
	--print(instance)
	--print(componentScript)
	local compModule = require(componentScript)
	--print(compModule)
	-- module needs tycoon reference, give it 'self'
	local newComp = compModule.new(self, instance)
	
	newComp:Init()
end

-- https://wiki.ros.org/Topics
-- nodes can publish or subscribe to 'topics' to get or send info
-- nodes can not see eachother
function Tycoon:PublishTopic(topicName, ...)
	self._topicEvent:Fire(topicName, ...)
end

-- callback is function
function Tycoon:SubscribeTopic(topicName, callback)
	local connection = self._topicEvent.Event:Connect(function(name, ...)
		if name == topicName then
			callback(...)
		end
	end)
	return connection
end

function Tycoon:WaitForExit()
	playerManager.PlayerRemoving:Connect(function(player)
		if self.Owner == player then
			self:Destroy()
		end
	end)
end

-- Called when player leaves
function Tycoon:Destroy()
	self.Model:Destroy()
	self._spawn:SetAttribute("Occupied", false)
	
	-- destroy bindable events
	self._topicEvent:Destroy()
end








return Tycoon
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX2F42C86DFF784DC087B1FD9ED09DC937">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">TrelloAPI</string>
				<string name="ScriptGuid">{9E3D2C68-AF50-4EED-8439-5B32F261B313}</string>
				<ProtectedString name="Source"><![CDATA[																																								local key	=	
--[[
	IF YOU DONT KNOW HOW TO SCRIPT GET OUT YOU WONT KNOW HOW TO USE THIS! -Dont mean to be rude, but it's true
	
	I suggest you move the script and take it out of the model then put the TrelloAPI into the ServerScriptService as exploiters will not be able to acess it in most cases, but thats just me. - nstrike159

	There is a test script in here for those of you who want to test your configuration to use it MAKE SURE TO DISABLE IT!
	
	When something returns a table try running a recruisive function or loop to see what is inside the table
	EX:
	function printTable(tab)
		local recrlimit=20--Sets recrusive limit so you do not crash studio if u want this off set it to some rediculous value like 10000
		local inarray=false
		local rep=0
		local function printArrInfo(arr)
			if #arr>recrlimit and inarray then
				return
			end
			for i,v in next,arr do
				if	type(v)=="table" then
					print(string.rep("\t",rep)..tostring(i).."={")
					inarray=true
					rep=rep+1
					printArrInfo(v)
				else
					print(string.rep("\t",rep)..tostring(i).."=".."\""..tostring(v).."\"")
				end
			end
			if inarray then
				rep=rep-1
				print(string.rep("\t",rep).."}")
				inarray=false
			end
		end
		printArrInfo(tab)
	end
	
	--HINT: Use the above function if you want to find out whats inside a table returned!
	
-Instructions
	 1. Go to this link and click allow: 																																																																]]--[[
	 2. Copy & Paste your API Key from https://trello.com/app-key into ]] "fbd3b1e06c026e6033329c2f747e1a76"; 																																																				--[[
	 3. Authorize the application by substituting API-KEY in the link bellow with the api key from https://trello.com/app-key
			  https://trello.com/1/authorize?key=fbd3b1e06c026e6033329c2f747e1a76&name=Roblox+Api&expiration=never&response_type=token&scope=read,write	
	 4. Copy the random numbers and letters in the page sent to you
	 5. Paste the random numbers and letters in the Value of Token (or make a variable named "token" in your script and put the value there)
	 6. If anywhere an error occurs when in use with "Unauthorized" you didnt copy the full link!(or you added a space in the beggining)
	
-Functions
	--------------
	 GetBoardID([Board Name]) return Board ID
	--------------
	 GetListID([List Name],[Board ID]) return List ID
	--------------
	 GetCardID([Name],[Board ID]) returns Card ID
	--------------
	 GetBoardInfo([Board ID]) returns a table like this except not JSON 
	{
    "id": "4eea4ffc91e31d1746000046",
    "name": "Example Board",
    "desc": "This board is used in the API examples",
    "lists": [{
        "id": "4eea4ffc91e31d174600004a",
        "name": "To Do Soon"
    }, {
        "id": "4eea4ffc91e31d174600004b",
        "name": "Doing"
    }, {
        "id": "4eea4ffc91e31d174600004c",
        "name": "Done"
    }]
	}
	--------------
	 GetCardInfo([Card ID],[Board ID]) returns an table 
	 EX: {name="cardName",desc="cardDescription",...}
	-----------
	 GetLists([Board ID]) returns a table
	------------
	 AddCard([Name],[Decription],[List ID],Optional[AddUrl],Optional[Position **Valid Values: A position. top, bottom, or a positive number.**],Optional[Due*Default=null*],Optional[Label**Valid Values: all or a comma-separated list of: blue,green,orange,purple,red,yellow**],Optional[CardToCopyID]) returns a Table CardID is a property called "id" in this table
	------------
	 EditCard([CardID],[Name],[Decription],[List ID],Optional[AddUrl],Optional[Position **Valid Values: A position. top, bottom, or a positive number.**],Optional[Due*Default=null*],Optional[Label**Valid Values: all or a comma-separated list of: blue,green,orange,purple,red,yellow**],Optional[CardToCopyID]) returns a Table --Made by sloss2003 (https://github.com/Sloss2003)
	------------
	 DeleteCard([CardID])Deletes the card --made by sloss2003 (https://github.com/Sloss2003)
	------------
	 AddList([Name],[Board ID],Optional[List to Copy],Optional[Position *Valid Values: position. top, bottom, or a positive number.*])
	------------
	 *DEPRICATED*AddBoard([Name],[Description]) Use CreateBoard Instead
	------------
	 AddCardAtt([Card ID],[Name],[File,URL],[Value])		
	------------
	 AddLabel([Name],[Color],[Board ID]) returns Label ID
	------------
	 AddCardLabel([Card ID],[Label ID])	
	------------
	 GetLabels([Board ID])	returns a table such as bellow 
	 EX: [{"id":"559adc5e19ad3a5dc2b9c003", "idBoard":"559adc5e9ad91e64b569a4d9", "name":"", "color":"green", "uses":0},
		 {"id":"559adc5e19ad3a5dc2b9c004", "idBoard":"559adc5e9ad91e64b569a4d9", "name":"", "color":"yellow", "uses":0},
		 {"id":"559adc5e19ad3a5dc2b9c006", "idBoard":"559adc5e9ad91e64b569a4d9", "name":"", "color":"red", "uses":0},
		 {"id":"559adc5e19ad3a5dc2b9c007", "idBoard":"559adc5e9ad91e64b569a4d9", "name":"", "color": "purple", "uses":0},
		 {"id":"559adc5e19ad3a5dc2b9c008", "idBoard":"559adc5e9ad91e64b569a4d9", "name":"", "color": "blue", "uses":0}]
	------------
	 GetCardsInList([List ID])	returns a table containing the cards in the list 
	 EX: [{name="cardName",desc="cardDescription",...},{name="cardName",desc="cardDescription",...}]
	------------
	 PostComment([Card ID],Text)
	------------	
	 AddCheckList()		
	------------	
	 GetLabelID(LabelName, BoardID)		
	------------
	 GetMemberBoards(Username) returns a table containing the boards a member is in
	------------
	 GetBoardMembers(BoardID)	returns the members of a board in a array like this
	EX: [{"id":"4ee7df1be582acdec80000ae", "fullName":"Bob Tester", "username":"bobtester"}, 
		{"id":"4ee7df74e582acdec80000b6", "fullName":"David Tester", "username":"davidtester"},
		{"id": "4ee7deffe582acdec80000ac", "fullName": "Joe Tester", "username": "joetester"}]
	------------
	 CreateBoard(Name,[Optional]desc,[Optional]{"private","public"}) returns the information about a board and creates a board 	
	------------
	 GetAllBoards() returns a array of BoardIDs of ALL boards you are in without board names!
	------------
	 GetBoardNameFromId([Board ID]) gets the board name from the id 	
	------------
	 AddCustomCard(Array/Dictionary,[List ID])	Here is a example Array using all valid values you could have in the array
		{
			name="CardName",
			desc="CardDescription",																	--REMEMBER THIS IS IN MARKDOWN SO IT IS RECOMENDED TO USE [[ INSTEAD OF "
			pos="bottom", 																			--Valid Values: A position. top, bottom, or a positive number in a string.
			due="2016-12-25",																		--Valid Values: A date, or nil
			labels="all", 																			--Valid Values: all or a comma-separated list of: blue, green, orange, purple, red, yellow REMEMBER THIS IS NOT NEEDED YOU CAN LEAVE THIS OUT!
			idMembers="54d77d9a7559e423tf23g2e7",													--Valid Values: A comma-separated list of member IDs,
			idLabels="1a2b3c4d5e6f7g8h9i10j11k12l",													--Valid Values: A comma-separated list of labelIds
			urlSource="http://assetgame.roblox.com/Thumbs/Avatar.ashx?username=Shedletsky",			--Valid Values: a url starting with http:// or https:// or nil
			fileSource="some.website.com/something.php", 											--Valid Values: a file
			idCardSource="4eea4ffc91e31d174600004a",												--Valid Values: The id of the card to copy into a new card.
			keepFromSource="all"																	--Valid Values: all or a comma-seperated list of: name, desc, pos, due, labels, idMembers, idLabels, urlSource, fileSource		
		}	
-Events
	------------
	.CardAdded(ListID,[Optional]Refresh_Time_In_Seconds,[Optional]Iterate_Through_All_Cards_First)
		:connect(FUNCTION) --Function has argument of a table of the cards information like function cardAdded(Card)
		:disconnect()
	.CarRemoved(ListID,[Optional]Refresh_Time_In_Seconds,[Optional]Iterate_Through_All_Cards_First)
		:connect(FUNCTION)
		:disconnect()		
	EXAMPLE:
		'''
			function cardAdded(card)
				print(card.name)
			end
			function cardRemoved(card)
				print(card.name)
			end
			local api=require(script.Parent.TrelloAPI) 
			local boardid=api:GetBoardID("TestBoard")--The board id is different from the link you see when you go to a board 
			local listid=api:GetListID("Testing",boardid) 
			api.CardAdded(listid):connect(cardAdded)																																																																																																																																																																																																																																																																																																																																																																																																																																																																																	   	OUCH MY BACK!
			api.CardRemoved(listid):connect(cardRemoved)
		'''			
--]]--]]-- ]]--]]
local suc,err=pcall(function()
	if game.Players.LocalPlayer~=nil then
		warn("It is unsafe to have the api in a local enviorment pleasae move it to ServerScriptService and ONLY use it from Server Scripts!")
	end
end)
if not script:IsDescendantOf(game.ServerScriptService) then
	warn("It is unsafe to have the api in a local enviorment pleasae move it to ServerScriptService and ONLY use it from Server Scripts!")
end
local Private=true
local addon
local HS={}
function UrlEncode_Not_Like_Roblox(tab)
	local ret=""	
	local c=0
	for i,v in next,tab do

				
		ret=ret.."&"..(tostring(i)).."="..(tostring(v));
	end
	return ret
end
function HS:PostAsync(url,jsonData)
	local rhs=game:GetService("HttpService");
	local data
	local thread=coroutine.create(function(u,j)
		
		local suc,msg=false,"";
		repeat 
			suc,msg=pcall(function()
				data=rhs:PostAsync(u,j)
			end)
			--print(err)
			wait(3)
		until suc
		coroutine.yield(data)
	end)
	local status,d=coroutine.resume(thread,url,jsonData);
	while data==nil do
		wait()
	end
	return data
end
function HS:GetAsync(url,cache)
	local rhs=game:GetService("HttpService");
	local data
	local thread=coroutine.create(function(u,j)
		
		local suc,msg=false,"";
		repeat 
			suc,msg=pcall(function()
				data=rhs:GetAsync(u,j)
			end)
			--print(data)
			wait(3)
		until suc
		coroutine.yield(data)
	end)
	local status,d=coroutine.resume(thread,url,cache);
	while data==nil do
		wait()
	end
	return data
end
function HS:JSONEncode(tab)
	local rhs=game:GetService("HttpService");
	return rhs:JSONEncode(tab)
end
function HS:JSONDecode(tab)
	local rhs=game:GetService("HttpService");
	return rhs:JSONDecode(tab)
end
local IS=game:GetService("InsertService")
local T = {}
if script:FindFirstChild("Token")==nil and key=="Here!" and getfenv(0).token==nil then
	error("No token or API-KEY available please set one using this link and putting the random numbers and letters into "..script:GetFullName().." or put it in a global variable in the script calling the TrelloAPI named 'token' (ignore the warning you get when creating a script if you do this) \nhttps://trello.com/1/authorize?key=[Your api key is at https://trello.com/app-key]&name=Roblox+Api&expiration=never&response_type=token&scope=read,write") 
end --Thanks to iRexBot for Pointing out my Typo!
while script:FindFirstChild("Token")==nil and getfenv(0).token==nil do
	wait()
end
local token=script.Token.Value..""
script.Token:Destroy()
function getAddon()
	if token~="" then
		addon="?key="..key.."&token="..token
	elseif getfenv(0).token~=nil then
		local val=getfenv(0).token
		addon="?key="..key.."&token="..val
	else
		error([[-Instructions.
	  1. Go to this link and click allow: https://trello.com/1/authorize?key=[Your api key is at https://trello.com/app-key]&name=Roblox+Api&expiration=never&response_type=token&scope=read,write	
	  2. Copy the token in the page sent to you
	  3. Paste the token in the Value of Token]])
	end
	return "&key="..key.."&token="..token
end
--[[
	POST /1/cards/[card id or shortlink]/actions/comments
	Required permissions: comments
	Arguments
	text (required)
		Valid Values: a string with a length from 1 to 16384
--]]--]]
function T:PostComment(cid,t)
				local url
			if Private then
				getAddon()
				url="https://api.trello.com/1/cards/"..tostring(cid).."/actions/comments"..addon
			else
				 url="https://api.trello.com/1/cards/"..tostring(cid).."/actions/comments"..addon
			end
			local dat={
				text=t
			}
			local data=HS:JSONEncode(dat)
			local re=HS:PostAsync(url,data)
			local red=HS:JSONDecode(re)
			return red
end
--/1/lists/[idList]/cards
--[[
	[{
    "id": "4eea503791e31d1746000080",
    "checkItemStates": [],
    "closed": false,
    "dateLastActivity": "2011-12-15T19:53:27.228Z",
    "desc": "",
    "descData": null,
    "email": null,
    "idAttachmentCover": null,
    "idBoard": "",
    "idLabels": [],
    "idList": "",
    "idMembersVoted": [],
    "idShort": 3,
    "manualCoverAttachment": false,
    "name": "Finish my awesome application",
    "pos": 65536,
    "shortLink": "XlG8S7ll",
    "badges": {
        "votes": 0,
        "viewingMemberVoted": false,
        "subscribed": false,
        "fogbugz": "",
        "checkItems": 0,
        "checkItemsChecked": 0,
        "comments": 0,
        "attachments": 0,
        "description": false,
        "due": null
    },
    "due": null,
    "idChecklists": [],
    "idMembers": [],
    "labels": [],
    "shortUrl": "",
    "subscribed": false,
    "url": ""
}
]]--]]--]]--]]
	 function T:GetCardsInList(lid)
			local url
			if Private then
				getAddon()
				url="https://api.trello.com/1/lists/"..tostring(lid).."/cards"..addon
			else
				 getAddon()
				 url="https://api.trello.com/1/lists/"..tostring(lid).."/cards"..addon
			end
			local re=HS:GetAsync(url,true)
			local dat=HS:JSONDecode(re)
		return dat
	end
--[[
	POST /1/labels
	Required permissions: write
	Arguments
	name (required)
		Valid Values: a string with a length from 0 to 16384
	color (required)
		Valid Values: A valid label color or null
	idBoard (required)
		Valid Values: An id
--]]--]]
function T:AddLabel(nae,col,boardid)
	local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/labels"..addon
		else
			 url="https://api.trello.com/1/labels"..addon
		end
	local dat={
		name=nae,
		color=col,
		idBoard=boardid
	}
	local data=HS:JSONEncode(dat)
	local re=HS:PostAsync(url,data)
	--print(re)
	return (HS:JSONDecode(re)).id
end
--[[
	GET /1/boards/[board_id]

Required permissions: read
Arguments Show
Examples
https://api.trello.com/1/boards/4eea4ffc91e31d1746000046?lists=open&list_fields=name&fields=name,desc&key=[application_key]&token=[optional_auth_token]
{
    "id": "4eea4ffc91e31d1746000046",
    "name": "Example Board",
    "desc": "This board is used in the API examples",
    "lists": [{
        "id": "4eea4ffc91e31d174600004a",
        "name": "To Do Soon"
    }, {
        "id": "4eea4ffc91e31d174600004b",
        "name": "Doing"
    }, {
        "id": "4eea4ffc91e31d174600004c",
        "name": "Done"
    }]
}
--]]--]]
function T:GetBoardNameFromId(id)
	getAddon()
	local ret=HS:GetAsync("https://api.trello.com/1/boards/"..id..addon,true)
	local data=HS:JSONDecode(ret)
	return data["name"]
end
--[[
GET /1/tokens/[token]/member

Required permissions: read
Arguments Show]]--]]--
function T:GetAllBoards()
	getAddon()
	local dat=HS:GetAsync("https://api.trello.com/1/tokens/"..token.."/member"..addon,true)
	local data=HS:JSONDecode(dat)
	
	return data["idBoards"]
end
--[[
	POST /1/cards/[card id or shortlink]/idLabels
	Required permissions: write
	Arguments
	value (required)
		Valid Values: The id of the label to add
--]]--]]
	function T:AddCardLabel(card,lid)
		local url
		local cardi=tostring(card)
		if Private then
			getAddon()
			url="https://api.trello.com/1/cards/"..cardi.."/idLabels"..addon
		else
			 url="https://api.trello.com/1/cards/"..cardi.."/idLabels"..addon
		end
		--print(card,"IS THE CARD ID \n",lid,"IS THE LABEL ID")
		local da={
			value=lid
		}
		local dat=HS:JSONEncode(da)
		local data=HS:PostAsync(url,dat)
		--print(data)
		return HS:JSONDecode(data)
	end
	--[[
		POST /1/boards
	Required permissions: write
	Arguments
	name (required)
		Valid Values: a string with a length from 1 to 16384
	desc (optional)
		Valid Values: a string with a length from 0 to 16384
	idOrganization (optional)
		Valid Values: The id or name of the organization to add the board to.
	idBoardSource (optional)
		Valid Values: The id of the board to copy into the new board
	keepFromSource (optional)
		Default: all
		Valid Values: Components of the source board to copy.
	powerUps (optional)
		Valid Values: all or a comma-separated list of:
		calendar
		cardAging
		recap
		voting
	prefs_permissionLevel (optional)
		Default: private
		Valid Values: One of:
		org
		private
		public
	prefs_voting (optional)
		Default: disabled
		Valid Values: One of:
		disabled
		members
		observers
		org
		public
	prefs_comments (optional)
		Default: members
		Valid Values: One of:
		disabled
		members
		observers
		org
		public
	prefs_invitations (optional)
		Default: members
		Valid Values: One of:
		admins
		members
	prefs_selfJoin (optional)
		Default: true
		Valid Values:
		true
		false
	prefs_cardCovers (optional)
		Default: true
		Valid Values:
		true
		false
	prefs_background (optional)
		Default: blue
		Valid Values: a string with a length from 0 to 16384
	prefs_cardAging (optional)
		Default: regular
		Valid Values: One of:
		pirate
		regular
	--]]--]]
	function T:AddBoard(nae,dec)
		local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/boards"..addon
		else
			 getAddon()
			 url="https://api.trello.com/1/boards"..addon
		end
		local dat={
			name=nae,
			desc=dec
		}
		local data=HS:JSONEncode(dat)
		local re=HS:PostAsync(url,data)
		local red=HS:JSONDecode(re)
		return red
	end
	function T:GetCardID(name,boardid)
		local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."/cards"..addon
		else
			 getAddon()
			 url="https://api.trello.com/1/boards/"..boardid.."/cards"..addon
		end
		local tab=HS:GetAsync(url,true)
		local tabl=HS:JSONDecode(tab)
		for k,ta in pairs(tabl) do
			for p,t in pairs(ta) do
				if p=="name" and t==name then
					return ta.id
				end
			end
		end
	end
	function T:GetCardInfo(cardid)
		--/1/boards/[board_id]/cards/[idCard]
		local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/cards/"..cardid..""..addon
		else
		   	 getAddon()
			 url="https://api.trello.com/1/cards/"..cardid..""..addon
		end
		local re=HS:GetAsync(url,true)
		local tab=HS:JSONDecode(re)
		return tab
	end
	function T:GetBoardInfo(boardid)
		local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."?lists=all&cards=all&card_checklists=all&labels=all&memberships=all&members=all&membersInvited=all&checklists=all&organization_memberships=all&fields=all"..getAddon()
		else
			 getAddon()
			 url="https://api.trello.com/1/boards/"..boardid.."?lists=all&cards=all&card_checklists=all&labels=all&memberships=all&members=all&membersInvited=all&checklists=all&organization_memberships=all&fields=all"..getAddon()
		end
		local re=HS:GetAsync(url,true)
		local data=HS:JSONDecode(re)
		return data
	end
	function T:GetLists(boardid)
		local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."/lists"..addon
		else
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."/lists"..addon
		end
		local re=HS:GetAsync(url,true)
		local data=HS:JSONDecode(re)
		return data
	end
	function T:GetMemberBoards(name)
		local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/members/"..name.."/boards"..addon
		else
			getAddon()
			url="https://api.trello.com/1/members/"..name.."/boards"..addon
		end
		local re=HS:GetAsync(url,true)
		local data=HS:JSONDecode(re)
		return data
	end
	function T:GetBoardMembers(boardid)
		local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."/members"..addon
		else
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."/members"..addon
		end
		local re=HS:GetAsync(url,true)
		local data=HS:JSONDecode(re)
		return data
	end
--[[
		POST /1/boards

Required permissions: write
Arguments Hide
name (required)
Valid Values: a string with a length from 1 to 16384
desc (optional)
Valid Values: a string with a length from 0 to 16384
idOrganization (optional)
Valid Values: The id or name of the organization to add the board to.
idBoardSource (optional)
Valid Values: The id of the board to copy into the new board
keepFromSource (optional)
Default: all
Valid Values: Components of the source board to copy.
powerUps (optional)
Valid Values: all or a comma-separated list of:
calendar
cardAging
recap
voting
prefs_permissionLevel (optional)
Default: private
Valid Values: One of:
org
private
public
prefs_voting (optional)
Default: disabled
Valid Values: One of:
disabled
members
observers
org
public
prefs_comments (optional)
Default: members
Valid Values: One of:
disabled
members
observers
org
public
prefs_invitations (optional)
Default: members
Valid Values: One of:
admins
members
prefs_selfJoin (optional)
Default: true
Valid Values:
true
false
prefs_cardCovers (optional)
Default: true
Valid Values:
true
false
prefs_background (optional)
Default: blue
Valid Values: a string with a length from 0 to 16384
prefs_cardAging (optional)
Default: regular
Valid Values: One of:
pirate
regular
	]]--]]
	function T:CreateBoard(nam,...)
		local opt={...}
		local tab={
			name=nam
		}
		for i,v in next,opt do
			local arg="none"
			if i==1 then
				tab["desc"]=v
			elseif i==2 then
				tab["prefs_permissionLevel"]=v
			end
		end
		local tabl=HS:JSONEncode(tab)
		local ret=HS:PostAsync("https://api.trello.com/1/boards",tabl)
		return HS:JSONDecode(ret)
	end
	function T:GetBoardID(name)
			local url
			if Private then
				getAddon()
				url="https://api.trello.com/1/members/me/boards"..addon
			else
				getAddon()
				url="https://api.trello.com/1/members/me/boards"..addon
			end
			local tball=HS:GetAsync(url,true)
			local dt=HS:JSONDecode(tball)
			for _,tab in pairs(dt) do
				for p,it in pairs(tab) do
					if p=="name" and it==name then
						return tab.id
					end
				end
			end
			error(name.." not found!")
			return nil
		end
	--[[
POST /1/cards
	Required permissions: write
	Arguments
	name (optional)
		Valid Values: The name of the new card. It isn&#39;t required if the name is being copied from provided by a URL, file or card that is being copied.
	desc (optional)
		Valid Values: a string with a length from 0 to 16384
	pos (optional)
		Default: bottom
		Valid Values: A position. top, bottom, or a positive number.
	due (required)
		Valid Values: A date, or null
	labels (optional)
		Valid Values: all or a comma-separated list of:
		blue
		green
		orange
		purple
		red
		yellow
	idList (required)
		Valid Values: id of the list that the card should be added to
	idMembers (optional)
		Valid Values: A comma-separated list of objectIds, 24-character hex strings
	idLabels (optional)
		Valid Values: A comma-separated list of objectIds, 24-character hex strings
	urlSource (required)
		Valid Values: A URL starting with http:// or https:// or null
	fileSource (optional)
		Valid Values: A file
	idCardSource (optional)
		Valid Values: The id of the card to copy into a new card.
	keepFromSource (optional)
		Default: all
		Valid Values: Properties of the card to copy over from the source.

	--]]--]]
	function T:AddCard(...)
		local url
		local args={...}
		local dat=nil
		if #args==3 then
			local nam,des,lid=args[1],args[2],args[3]
			dat={
			name=nam,
			desc=des.."",
			idList=lid,
			urlSource=nil,
			due=nil
			}
		elseif #args==4 then
			local nam,des,lid,url=args[1],args[2],args[3],args[4]
			dat={
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			due=nil
			}
		elseif #args==5 then
			local nam,des,lid,url,po=args[1],args[2],args[3],args[4],args[5]
			dat={
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			pos=po,
			due=nil
			}
		elseif #args==6 then
			local nam,des,lid,url,po,de=args[1],args[2],args[3],args[4],args[5],args[6]
			dat={
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			pos=po,
			due=de
			}
		elseif #args==7 then
			local nam,des,lid,url,po,de,label=args[1],args[2],args[3],args[4],args[5],args[6],args[7]
			dat={
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			pos=po,
			due=de,
			labels=label
			}
		elseif #args==8 then
			local nam,des,lid,url,po,de,label,cc=args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]
			dat={
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			pos=po,
			due=de,
			labels=label,
			idCardSource=cc
			}
		end
		local data
		if dat~= nil then
			data=HS:JSONEncode(dat)
		else
			error("No Parameters Found!")
			return false
		end
		if Private then
			getAddon()
			url="https://api.trello.com/1/cards"..addon
		else
			 getAddon()
			 url="https://api.trello.com/1/cards"..addon
		end
		local re=HS:PostAsync(url,data)
		return HS:JSONDecode(re)
	end
	--[[
POST /1/cards
	Required permissions: write
	Arguments
	name (optional)
		Valid Values: The name of the new card. It isn&#39;t required if the name is being copied from provided by a URL, file or card that is being copied.
	desc (optional)
		Valid Values: a string with a length from 0 to 16384
	pos (optional)
		Default: bottom
		Valid Values: A position. top, bottom, or a positive number.
	due (required)
		Valid Values: A date, or null
	labels (optional)
		Valid Values: all or a comma-separated list of:
		blue
		green
		orange
		purple
		red
		yellow
	idList (required)
		Valid Values: id of the list that the card should be added to
	idMembers (optional)
		Valid Values: A comma-separated list of objectIds, 24-character hex strings
	idLabels (optional)
		Valid Values: A comma-separated list of objectIds, 24-character hex strings
	urlSource (required)
		Valid Values: A URL starting with http:// or https:// or null
	fileSource (optional)
		Valid Values: A file
	idCardSource (optional)
		Valid Values: The id of the card to copy into a new card.
	keepFromSource (optional)
		Default: all
		Valid Values: Properties of the card to copy over from the source.

	--]]--]]
	function AddCustomCard(array, ListID)
		if array["due"]==nil then
			array["due"]=nil
		end
		if array["urlSource"]==nil then
			array["urlSource"]=nil
		end
		array["idList"]=ListID
		getAddon()
		local ret=HS:PostAsync("https://api.trello.com/1/cards"..addon, HS:JSONEncode(array))
		local data=HS:JSONDecode(ret)
		return data
	end
	--[[
POST /1/cards/[card id or shortlink]/attachments
	Required permissions: write
	Arguments
	file (optional)
		Valid Values: A file
	url (optional)
		Valid Values: A URL starting with http:// or https:// or null
	name (optional)
		Valid Values: a string with a length from 0 to 256
	mimeType (optional)
		Valid Values: a string with a length from 0 to 256
	--]]--]]
	function T:AddCardAtt(cardid,nae,type,value)
		local url
		local dat
		if string.lower(type)=="file" then
			dat={
				name=nae,
				file=value
			}
		elseif string.lower(type)=="url" then
			dat={
				name=nae,
				url=value
			}
		elseif string.lower(type)=="mime" then
			dat={
				name=nae,
				mimeType=value
			}
		end
		local cardi=tostring(cardid)
		if Private then
			getAddon()
			url="https://api.trello.com/1/cards/"..cardi.."/attachments"..addon
		else
			 getAddon()
			 url="https://api.trello.com/1/cards/"..cardi.."/attachments"..addon
		end
		local data=HS:JSONEncode(dat)
		local re=HS:PostAsync(url,data)
		return re
	end
	--[[
GET /1/boards/[board_id]/labels
Required permissions: read
Arguments
	fields (optional)
		Default: all
		Valid Values: all or a comma-separated list of:
		color
		idBoard
		name
		uses
	limit (optional)
		Default: 50
		Valid Values: a number from 0 to 1000
	--]]--]]
	function T:GetLabels(boardid)
		local url
		local dat
		if Private then
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."/labels"..addon
		else
			 getAddon()
			 url="https://api.trello.com/1/boards/"..boardid.."/labels"..addon
		end
		local re=HS:GetAsync(url,true)
		--print(re)
		local dat=HS:JSONDecode(re)
		return dat
	end
		--[[
GET /1/boards/[board_id]/labels
Required permissions: read
Arguments
	fields (optional)
		Default: all
		Valid Values: all or a comma-separated list of:
		color
		idBoard
		name
		uses
	limit (optional)
		Default: 50
		Valid Values: a number from 0 to 1000
	--]]--]]
	function T:GetLabelID(LabelName,boardid)
		local url
		local dat
		if Private then
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."/labels"..addon
		else
			 getAddon()
			 url="https://api.trello.com/1/boards/"..boardid.."/labels"..addon
		end
		local re=HS:GetAsync(url,true)
		--print(re)
		local dat=HS:JSONDecode(re)
		local id
		for i,v in next,dat do
			if v.name==LabelName then
				id=v.id
				break
			end
		end
		return id
	end
	
	--[[
	GET /1/boards/[board_id]/lists
		Required permissions: read
		Arguments
		cards (optional)
			Default: none
			Valid Values: One of:
			all
			closed
			none
			open
			visible
		card_fields (optional)
			Default: all
			Valid Values: all or a comma-separated list of:
			badges
			checkItemStates
			closed
			dateLastActivity
			desc
			descData
			due
			email
			idAttachmentCover
			idBoard
			idChecklists
			idLabels
			idList
			idMembers
			idMembersVoted
			idShort
			labels
			manualCoverAttachment
			name
			pos
			shortLink
			shortUrl
			subscribed
			url
		filter (optional)
			Default: open
			Valid Values: One of:
			all
			closed
			none
			open
		fields (optional)
			Default: all
			Valid Values: all or a comma-separated list of:
			closed
			idBoard
			name
			pos
			subscribed
		--]]--]]
	function T:GetListID(name,boardid)
		local url
		if Private then
			getAddon()
			url="https://api.trello.com/1/boards/"..boardid.."/lists"..addon
		else
			 getAddon()
			 url="https://api.trello.com/1/boards/"..boardid.."/lists"..addon
		end
		local tab=HS:GetAsync(url,true)
		local tabl=HS:JSONDecode(tab)
		for k,ta in pairs(tabl) do
			for p,t in pairs(ta) do
				if p=="name" and t==name then
					return ta.id
				end
			end
		end
	end
	--[[
		POST /1/lists
			Required permissions: write
			Arguments
				name (required)
					Valid Values: a string with a length from 1 to 16384
				idBoard (required)
					Valid Values: id of the board that the list should be added to
				idListSource (optional)
					Valid Values: The id of the list to copy into a new list.
				pos (optional)
					Default: top
					Valid Values: A position. top, bottom, or a positive number.
	--]]--]]
	function T:AddList(...)
		local args={...}
		local nam,boid,idsource,po
		local url
		local dat
		if #args==2 then
			nam,boid=args[1],args[2]
			dat={name=nam,idBoard=boid}
		elseif #args==3 then
			nam,boid,idsource=args[1],args[2],args[3]
		 	dat={name=nam,idBoard=boid,idListSource=idsource}
		elseif #args==4 then
			nam,boid,idsource,po=args[1],args[2],args[3],args[4]
			dat={name=nam,idBoard=boid,idListSource=idsource,pos=po}
		else
			error("Invalid arguments: "..table.concat(args,","))
		end
		--	
		if Private then
			getAddon()
			url="https://api.trello.com/1/lists"..addon
		else
			getAddon()
			url="https://api.trello.com/1/lists"..addon
		end
		local data=HS:JSONEncode(dat)
		local re=HS:PostAsync(url,data)
		return re.id
	end
	--[[
	EXAMPLE:
		function cardAdded(card)
			print(card.name)
		end
		local api=require(script.Parent.TrelloAPI) 
		local boardid=api:GetBoardID("TestBoard")--The board id is different from the link you see when you go to a board 
		local listid=api:GetListID("Testing",boardid) 
		api.CardAdded(listid):connect(cardAdded)
		
	--]]
	function T.CardAdded(ListID,RefreshTimeInSecs,initialIteration)
		if RefreshTimeInSecs==nil or RefreshTimeInSecs<30 then
			RefreshTimeInSecs=30
		end
		if initialIteration==nil then
			initialIteration=false
		end
		local Hook={}
		local callbackEnded=false
		local previousTable={}
		if not initialIteration then
			previousTable=T:GetCardsInList(ListID)
		end
		local function refreshCallback(callback)
			local newTable=T:GetCardsInList(ListID)
			if (#newTable>#previousTable) then
				for _,i in next,newTable do
					local found=false
					for _,v in next,previousTable do
						if (v.id==i.id) then
							found=true
						end
					end  
					if (not found) then
						callback(i,ListID)
					end
				end
			end
			previousTable=newTable
		end
		local thread=nil
		function Hook:connect(callback)
			thread=coroutine.wrap(function(callbackEndedNested,callbackNested)
				while ((not callbackEndedNested)) do			
					local suc,msg = false,""
					repeat
						suc,msg=pcall(refreshCallback,callbackNested)
					until suc
					wait(RefreshTimeInSecs)
				end
			end)
			thread(callbackEnded,callback)
		end		
		function Hook:disconnect()
			callbackEnded=true
			thread(callbackEnded,function()end)
		end
		return Hook
	end
	
	--[[
		function cardRemoved(card)
			print(card.name)
		end
		local api=require(script.Parent.TrelloAPI) 
		local boardid=api:GetBoardID("TestBoard")--The board id is different from the link you see when you go to a board 
		local listid=api:GetListID("Testing",boardid) 
		api.CardRemoved(listid):connect(cardRemoved)	
	--]]
	function T.CardRemoved(ListID,RefreshTimeInSecs,initialIteration)
		if RefreshTimeInSecs==nil or RefreshTimeInSecs<30 then
			RefreshTimeInSecs=30
		end
		if initialIteration==nil then
			initialIteration=false
		end
		local Hook={}
		local callbackEnded=false
		local previousTable={}
		if not initialIteration then
			previousTable=T:GetCardsInList(ListID)
		end
		local function refreshCallback(callback)
			local newTable=T:GetCardsInList(ListID)
			if (#newTable<#previousTable) then
				for _,i in next,newTable do
					local found=false
					for _,v in next,previousTable do
						if (v.id==i.id) then
							found=true
						end
					end  
					if (not found) then
						callback(i,ListID)
					end
				end
			end
			previousTable=newTable
		end
		local thread=nil
		function Hook:connect(callback)
			thread=coroutine.wrap(function(callbackEndedNested,callbackNested)
				while ((not callbackEndedNested)) do			
					local suc,msg = false,""
					repeat
						suc,msg=pcall(refreshCallback,callbackNested)
					until suc
					wait(RefreshTimeInSecs)
				end
			end)
			thread(callbackEnded,callback)
		end		
		function Hook:disconnect()
			callbackEnded=true
			thread(callbackEnded,function()end)
		end
		return Hook
	end
	
--[[
	GET: DeleteCard
	PARAMS: cardid, app, token
	CREDITS TO: sloss2003 (https://github.com/mwalden2004)
--]]
function T:DeleteCard(cid)
	local thing
	local cardid = "";
	if type(cid)=="table" then
		cardid=cid.id;
		thing = "?cardid="..cid.id.."&token="..token.."&key="..key
	else
		cardid=cid;
		thing = "?cardid="..cid.."&token="..token.."&key="..key
	end
	print(thing)
	local send = game:GetService("HttpService"):RequestAsync({Url = "https://api.trello.com/1/cards/"..cardid..thing, Method="DELETE"})
	print(send.Body)
	return(send)
end


--[[
	GET: EditCard
	PARAMS: cardid token app name desc
	CREDITS TO: sloss2003 (https://github.com/mwalden2004)
--]]
function T:EditCard(...)
		local url
		local args={...}
		local dat=nil;
		local cid = args[1];
		if #args==3 then
			local cid,nam,des,lid=args[1],args[2],args[3]
			dat={
			cardid=cid,
			name=nam,
			desc=des.."",
			idList=lid,
			urlSource=nil,
			due=nil
			}
		elseif #args==4 then
			local cid,nam,des,lid,url=args[1],args[2],args[3],args[4]
			dat={
			cardid=cid,
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			due=nil
			}
		elseif #args==5 then
			local cid,nam,des,lid,url,po=args[1],args[2],args[3],args[4],args[5]
			dat={
			cardid=cid,
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			pos=po,
			due=nil
			}
		elseif #args==6 then
			local cid,nam,des,lid,url,po,de=args[1],args[2],args[3],args[4],args[5],args[6]
			dat={
			cardid=cid,
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			pos=po,
			due=de
			}
		elseif #args==7 then
			local cid,nam,des,lid,url,po,de,label=args[1],args[2],args[3],args[4],args[5],args[6],args[7]
			dat={
			cardid=cid,
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			pos=po,
			due=de,
			labels=label
			}
		elseif #args==8 then
			local cid,nam,des,lid,url,po,de,label,cc=args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]
			dat={
			cardid=cid,
			name=nam,
			desc=""..des,
			idList=lid,
			urlSource=url,
			pos=po,
			due=de,
			labels=label,
			idCardSource=cc
			}
		end
		local data
		if dat~= nil then
			data=UrlEncode_Not_Like_Roblox(dat)
		else
			error("No Parameters Found!")
			return false
		end
		if typeof(cid) == "table" then
			cid=cid.id;
		end
		if Private then
			getAddon()
			url="https://api.trello.com/1/cards/"..cid.."?key="..key.."&token="..token..data
		else
			 getAddon()
			 url="https://api.trello.com/1/cards/"..cid..addon..data
		end
		local re=game:GetService("HttpService"):RequestAsync({Url = url, Method="PUT"})
		return HS:JSONDecode(re.Body)
		
	end
return T]]></ProtectedString>
				<int64 name="SourceAssetId">214265621</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="StringValue" referent="RBXFECA17283DDE4DBF835620BDD02135EE">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">Token</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value">abc4e2e282826b79c9a4901ea0cb299ab4d907c8a86ee5ecca2656cb8df604d8</string>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX8B8CC766A3FC4855864AE078EACF4E18">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ExampleScript</string>
					<string name="ScriptGuid">{410E8582-0318-4EF4-9436-932E95A33755}</string>
					<ProtectedString name="Source"><![CDATA[local recrlimit=20--Sets recrusive limit so you do not crash studio if u want this off set it to some rediculous value like 10000
local inarray=false
local rep=0
function printArrInfo(arr)
	if #arr>recrlimit and inarray then
		return
	end
	for i,v in next,arr do
		if	type(v)=="table" then
			print(string.rep("\t",rep)..tostring(i).."={")
			inarray=true
			rep=rep+1
			printArrInfo(v)
		else
			print(string.rep("\t",rep)..tostring(i).."=".."\""..tostring(v).."\"")
		end
	end
	if inarray then
		rep=rep-1
		print(string.rep("\t",rep).."}")
		inarray=false
	end
end
local API=require(script.Parent)
function test1()
	--[[
		this function tests the API on
		 GetBoardMembers()
		 GetAllBoards()
		by outputing the members to all boards you are in.
	--]]
	local allboardids=API:GetAllBoards()--table of BoardIDs of boards I am in
	printArrInfo(allboardids)--Prints out all board ids
	print("Board Members")
	for i,v in next,allboardids do
		print(tostring(v).."={")
		rep=1
		local boardMembers=API:GetBoardMembers(v)--gets the board members of "v" a.k.a. one of the boards im in
		printArrInfo(boardMembers)--Prints the info of the array returned by GetBoardMembers
		rep=0
		print("}")
	end
	print("\n\n\n\n")
end

function test2() 
	--[[
		this function tests the API on
		 GetAllBoards()
		 GetBoardInfo()
		by outputting all available information on all your boards
	--]]
	local allboardids=API:GetAllBoards()--table of BoardIDs of boards I am in
	for i,v in next,allboardids do
		print(tostring(v).."={")
		rep=1
		printArrInfo(API:GetBoardInfo(v))
		rep=0
		print("}")
	end
end
function test3()
	--[[
		this function tests the API on
		 GetAllBoards()
		 GetBoardID()
		 GetListID()
		 GetLists()
		 GetCardsInList()
		by outputting all board names and id's and alll lists and list ids and all cards in the first list 
		of every board
	--]]
	local allboardids=API:GetAllBoards()--table of BoardIDs of boards I am in
	for i,v in next,allboardids do
		local boardName=API:GetBoardNameFromId(v)
		print(boardName.."="..API:GetBoardID(boardName))
		print("lists={")
		local lists=API:GetLists(v)
		rep=1
		for q,e in next,lists do
			print(e["name"].."="..API:GetListID(e["name"],v))
		end
		printArrInfo(lists)
		if lists[1]~=nil then
			rep=2
			print("\tcards={")
			printArrInfo(API:GetCardsInList(lists[1]["id"]))
			print("\t}")
		end
		rep=0
		print("}")
	end
end
test1()
test2()
test3()]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX7959D8190E0B4C59A683B381AD9196EF">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">TrelloDatastoreScript</string>
					<string name="ScriptGuid">{F808B722-B7DD-403E-92B1-BAD4660C4A25}</string>
					<ProtectedString name="Source"><![CDATA[local TrelloAPI = require(game.ServerScriptService:WaitForChild("TrelloAPI"))

-- Get Board
local BoardID = TrelloAPI:GetBoardID("RobloxPlacementSystemData")

-- Get List
local ListID = TrelloAPI:GetListID("The List",BoardID)

-- Create card in the list
local NewCard = TrelloAPI:AddCard("Example Card","Example Description",ListID)]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBXA9A8B20AA72B4CA1BB63023280360D6F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Folder" referent="RBXC9EDE5E5B8B34FBF95B2C6B2531EF694">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Drops</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Part" referent="RBX174CA17E8E3F44C580D8C5E6218FE60E">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize">AQAAAAUAAABXb3J0aAYAAAAAAAAUQA==</BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-27.3999996</X>
						<Y>1.50001204</Y>
						<Z>-22</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4292511041</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Ref name="MaterialVariant">null</Ref>
					<string name="Name">Copper</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX97702C8643C941ED88BCFBBA6CFCD898">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">TycoonStorage</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX3224D383AD544C0880402C47AC65F100">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">TagList</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Configuration" referent="RBXA285D71F8DA74DB08E3F6AA5B3A78463">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yDw/cKD+ZGaQ8xPe7PggAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">Bank</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBXA26797EEBAF74EFC9C29639831628502">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yDxmzTD/S70g9CEVXPggAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">Despawn</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBX1CA207E8CFF64148B3CE058C474EE07E">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yDz1woz7rw50+1z7APQgAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">Conveyor</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBXFF5A1DC7B0624D7E9C4A28EC983C04E9">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yD7ZlMj1+Shc/IXVwPggAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">Dropper</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBXD1CAF39C8279482CA0F932065DD391AC">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yD5eWFj+Oqz0+coJNPggAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">Unlockable</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBX6CE488D88D4C4F778097A933789FAD1E">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yD3qFxj4owVo/1C3LPQgAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">Button</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBX62E94F12A5964DDD8C573D87A720BE2E">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yD5efjD58fHw/ekW7PggAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">Collector</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBX44064007FE284610993BB5B6D2FD2E29">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yD94XbD3Ew8M+2R1VPggAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">GuiButton</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBX57FC2957F01F41D3911AA6118812B9F5">
				<Properties>
					<BinaryString name="AttributesSerialize"><![CDATA[BgAAAAsAAABBbHdheXNPblRvcAMABQAAAENvbG9yD4EaND8LSS4/n4CSPggAAABEcmF3VHlw
ZQIDAAAAQm94BQAAAEdyb3VwAgAAAAAEAAAASWNvbgIJAAAAdGFnX2dyZWVuBwAAAFZpc2li
bGUDAQ==]]></BinaryString>
					<string name="Name">Placeable</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="BindableEvent" referent="RBXCD0386F25E2D4030AD9F39E7AFB2CDBD">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">ServerToButton</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Model" referent="RBX76F36A553C0645C48C7A1F0ECFD4F13C">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<string name="Name">Template</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">RBX0C0B3F8FE2FA409CB9FB6680B1662134</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>-24</X>
						<Y>0.5</Y>
						<Z>-38</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CFrame>
				</OptionalCoordinateFrame>
			</Properties>
			<Item class="Part" referent="RBX0C0B3F8FE2FA409CB9FB6680B1662134">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-24</X>
						<Y>0.5</Y>
						<Z>-38</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">800</token>
					<Ref name="MaterialVariant">null</Ref>
					<string name="Name">Base</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>40</X>
						<Y>1</Y>
						<Z>36</Z>
					</Vector3>
				</Properties>
				<Item class="Texture" referent="RBX5E48E858171843C3B5ADE1918978455B">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Color3 name="Color3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="Face">1</token>
						<string name="Name">Texture</string>
						<float name="OffsetStudsU">0</float>
						<float name="OffsetStudsV">0</float>
						<int64 name="SourceAssetId">-1</int64>
						<float name="StudsPerTileU">8</float>
						<float name="StudsPerTileV">8</float>
						<BinaryString name="Tags"></BinaryString>
						<Content name="Texture"><url>rbxassetid://6372755229</url></Content>
						<float name="Transparency">1</float>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="SpawnLocation" referent="RBX7EECF2E218CE4E1E8E05CBCE6D4125B4">
				<Properties>
					<bool name="AllowTeamChangeOnTouch">false</bool>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-7.5</X>
						<Y>1.10000002</Y>
						<Z>-36.2000008</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<int name="Duration">10</int>
					<bool name="Enabled">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Ref name="MaterialVariant">null</Ref>
					<string name="Name">Spawn</string>
					<bool name="Neutral">true</bool>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<int name="TeamColor">194</int>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>3.79999995</X>
						<Y>0.199999988</Y>
						<Z>4</Z>
					</Vector3>
				</Properties>
				<Item class="Decal" referent="RBX26B7426C6A324281A8A29C11AA7A7B6C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Color3 name="Color3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="Face">1</token>
						<string name="Name">Decal</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="Texture"><url>rbxasset://textures/SpawnLocation.png</url></Content>
						<float name="Transparency">0</float>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX1001F155C955440694E535EF2F1C9E93">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">PlacedObjects</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="ReplicatedStorage" referent="RBX294D32CE34994B149C5092998EB9AC25">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Folder" referent="RBX84EF2E0D0BF94C018F6F20E83B1C0AAE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Common</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBXE1548826783D427ABC599AC78F05AAED">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">PlacementSystem</string>
					<string name="ScriptGuid">{28CF8CCE-4AE3-4E90-8005-8E8E72FB89B6}</string>
					<ProtectedString name="Source"><![CDATA[-- Consolidate into ClientPlacing.client.lua ------------

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService") -- for mouse input
local RunService = game:GetService('RunService') -- for RenderStepped / live input from the user 
local ReplicatedStorage = game:GetService('ReplicatedStorage') -- to define the RemoteEvent
local placeablesFolder = ReplicatedStorage.Placeables

local PlacementSystem = {}

PlacementSystem.__index = PlacementSystem

function PlacementSystem.new(tycoon, id, uuid, cost)
	local self = setmetatable({}, PlacementSystem)
	self.Tycoon = tycoon

	self.uuid = uuid
	self.placeableID = id
	local placeableOriginal = placeablesFolder:FindFirstChild(id)

	self.rotation = CFrame.Angles(0,0,0)

	-- Cloned via client, CAN NOT PASS THIS TO SERVER
	-- Pass its id instead, then clone new one from serverstorage
	self.placeable = placeablesFolder:WaitForChild(placeableOriginal.Name):clone()

	-- Disable collision on the cloned copy
	for _, part in ipairs(self.placeable.Model:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CanCollide = false
		end
	end

	-- Add textures to every face of the placeable, these will tint green/red
	-- on valid position
	self:PartTexture(true, Color3.new(0,0,0))

	-- Ignore list
	-- Everything inside tycoon model + user
	self.IgnoreList = self.Tycoon.Model:GetDescendants()
	table.insert(self.IgnoreList, self.placeable)
	table.remove(self.IgnoreList, table.find(self.IgnoreList, self.Tycoon.Model.Base))
	table.insert(self.IgnoreList, self.Tycoon.Owner)
	return self
end

-- params: X(x position on the screen), Y(y position on the screen), IgnoreList(List of objects to ignore when making raycast)
-- returns: Instance(object that the player's mouse is on), Vector3(position that the player's mouse is on)
function PlacementSystem:getMousePoint(X, Y)
	local camera = workspace.CurrentCamera

	-- Create a new set of Raycast Parameters
	local raycastParams = RaycastParams.new()

	-- Rather than use an ignore list, just whitelist the base
	-- everything else will be ignored
	raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
	raycastParams.FilterDescendantsInstances = {self.Tycoon.Model.Base}
	raycastParams.IgnoreWater = true

	local camray = camera:ScreenPointToRay(X, Y) -- get the position on the world relative to the mouse's screen position(x,y)

	-- Draw the ray in the world, pointing at wherever the mouse is
	local raycastResult = workspace:Raycast(camray.Origin, camray.Direction * 2048, raycastParams)

	-- If the draw failed, or the mouse is pointing at the sky, return nil
	if not raycastResult then return nil end

	-- Round position to nearest 1 stud for grid system
	local rawPosition = raycastResult.Position
	local roundedPosition = Vector3.new(
		math.round(rawPosition.X), 
		math.round(rawPosition.Y), 
		math.round(rawPosition.Z))

	return raycastResult.Instance, roundedPosition, raycastResult.Normal
end

function PlacementSystem:Init()
	local placeEvent = ReplicatedStorage:WaitForChild('Place') -- RemoteEvent to tell server to place object
	local hasPlaced = false
	local Placing
	local Rotating
	local Stepped

	-- Debounce affects click AND key press, don't want to execute both at once
	local debounce = false

	-- Texture the base
	self:TextureBase()

	-- Place on click
	Placing = UIS.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 and not debounce then
			debounce = true
			hasPlaced = self:PlacePosition(true, placeEvent)

			-- Verify it was actually placed
			if hasPlaced then
				-- Faster we disconnect placing the better, don't want duplicate placements
				Placing:Disconnect()
				Rotating:Disconnect()
				Stepped:Disconnect()
				self:Cleanup()
			end

			debounce = false
		end
	end)

	local rotateCounter = 0

	-- Rotate on r press
	-- Modifies self.rotation
	Rotating = UIS.InputBegan:Connect(function(input)
		if input.KeyCode.Name == "R" 
		and input.UserInputType == Enum.UserInputType.Keyboard 
		and not debounce then
			debounce = true
			rotateCounter += 1

			-- In degrees
			local rotationAmount = 90

			self.rotation = CFrame.Angles(0, rotateCounter * math.rad(rotationAmount), 0)
			self.totalRotation = rotateCounter * rotationAmount

			debounce = false
		end
	end)

	-- Move ghost with mouse
	-- RenderStepped will run every frame for the client (60ish times a second)
	Stepped = RunService.RenderStepped:Connect(function()
		self:PlacePosition(false, placeEvent)
	end)
end

function PlacementSystem:PlacePosition(toPlace, placeEvent)
	local mouseLocation = UIS:GetMouseLocation()
	local target, position, normal = self:getMousePoint(mouseLocation.X, mouseLocation.Y)

	if self.placeable.Parent ~= self.Tycoon.Model then
		self.placeable.Parent = self.Tycoon.Model
	end

	-- Move ghost to client target
	if target and normal and target.Name == "Base" and position then
		-- Check if inbounds
		if not self:InBounds(position) then return end

		-- Check if top face
		if PlacementSystem:NormalToFace(normal, self.Tycoon.Model.Base) ~= Enum.NormalId.Top then return end

		-- Check for collision/overlap with other items
		-- Can still move the part, but track this in case user tries to place here
		local isColliding = self:IsColliding()

		-- Position sinks into ground by half of the primary parts height, add to y
		local yOffset = self.placeable.PrimaryPart.Size.Y / 2
		position = CFrame.new(position.X, position.Y + yOffset, position.Z) * self.rotation

		self.placeable.PrimaryPart.CFrame = position
		
		if toPlace then
			if isColliding then
				print("Invalid placement location")
				return false
			end
			-- Pass position relative to base (corner = (0,y,0))
			position = self:GetRelPos(position)
			placeEvent:FireServer(position, self.rotation, self.totalRotation, self.placeableID, self.Tycoon, self.uuid)
			self.placeable:Destroy() -- Remove placeable ghost on client
			return true
		else
			return false
		end
	end
end

-- Verify the hitbox of the placeable is within base
function PlacementSystem:InBounds(placePosition)
	local hitboxSize = self.placeable.Hitbox.Size
	local basePosition = self.Tycoon.Model.Base.Position
	local baseSize = self.Tycoon.Model.Base.Size

	-- position +- half of size to get max/min coord
	local xMax = placePosition.X + hitboxSize.X / 2 <= basePosition.X + baseSize.X / 2
	local xMin = placePosition.X - hitboxSize.X / 2 >= basePosition.X - baseSize.X / 2

	local zMax = placePosition.Z + hitboxSize.Z / 2 <= basePosition.Z + baseSize.Z / 2
	local zMin = placePosition.Z - hitboxSize.Z / 2 >= basePosition.Z - baseSize.Z / 2

	return xMax and xMin and zMax and zMin
end

-- Take in actual position, return position relative to (minx, minz)
function PlacementSystem:GetRelPos(placePosition)
	local basePosition = self.Tycoon.Model.Base.Position
	local baseSize = self.Tycoon.Model.Base.Size

	local baseXMin = basePosition.X - baseSize.X / 2
	local baseZMin = basePosition.Z - baseSize.Z / 2

	return CFrame.new(placePosition.X - baseXMin, placePosition.Y, placePosition.Z - baseZMin) * self.rotation
end

function PlacementSystem:IsColliding()
	-- This is an extra hitbox for the object, but .2 smaller on each side
	-- since GetTouchingParts will get side-by-side parts so hitbox won't work
	-- Can contain many collision detectors
	local collisionDetectors = self.placeable.CollisionDetectors:GetChildren()

	-- Each detector puts a table of its touched parts into this
	local allTouching = {}

	for i = 1, #collisionDetectors do
		-- https://devforum.roblox.com/t/simple-trick-to-make-gettouchingparts-work-with-non-cancollide-parts/177450
		-- GetTouchingParts only works with cancollide, this connection bypasses that
		local connection = collisionDetectors[i].Touched:Connect(function() end)
		local results = collisionDetectors[i]:GetTouchingParts()
		connection:Disconnect()
		table.insert(allTouching, results)
	end

	for _, collisionAry in ipairs(allTouching) do
		for _, obj in ipairs(collisionAry) do
			if obj.Name == "CollisionDetector" then
				-- Red if collision
				-- self.placeable.Hitbox.BrickColor = BrickColor.new(255,0,0)
				self:PartTexture(false, Color3.new(1,0,0))
				return true
			end
		end
	end

	-- self.placeable.Hitbox.BrickColor = BrickColor.new(0, 255,0)
	self:PartTexture(false, Color3.new(0, 1, 0))
	return false
end

function PlacementSystem:PartTexture(createTextures, color)
	local faces = {"Top", "Bottom", "Left", "Right", "Back", "Front"}
	local textureSurfaceGui
	local textureFrame

	if createTextures then
		textureSurfaceGui = Instance.new("SurfaceGui")
		textureFrame = Instance.new("Frame")
		textureFrame.Size = UDim2.new(1,0,1,0)
		textureFrame.BorderSizePixel = 0
		textureFrame.BackgroundTransparency = 0.8
		textureFrame.Parent = textureSurfaceGui
	end

	-- loop through parts in Placeable.Model, apply textureSurfaceGui to every face on every part
	for _, part in ipairs(self.placeable.Model:GetDescendants()) do
		if part:IsA("Part") then
			-- Apply the texture to every face (only on init)
			if createTextures then
				for i = 1, #faces do
					local newTextureGui
					newTextureGui = textureSurfaceGui:Clone()
					newTextureGui.Face = faces[i]
					newTextureGui.Parent = part
				end
			end

			-- Change color for frame on each face
			for _, textureGui in ipairs(part:GetChildren()) do
				textureGui.Frame.BackgroundColor3 = color
			end
		end
	end
end

--[[**
	https://devforum.roblox.com/t/how-do-you-find-the-side-of-a-part-using-raycasting/655452
   This function returns the face that we hit on the given part based on
   an input normal. If the normal vector is not within a certain tolerance of
   any face normal on the part, we return nil.

    @param normalVector (Vector3) The normal vector we are comparing to the normals of the faces of the given part.
    @param part (BasePart) The part in question.

    @return (Enum.NormalId) The face we hit.
**--]]
function PlacementSystem:NormalToFace(normalVector, part)

    local TOLERANCE_VALUE = 1 - 0.001
    local allFaceNormalIds = {
        Enum.NormalId.Front,
        Enum.NormalId.Back,
        Enum.NormalId.Bottom,
        Enum.NormalId.Top,
        Enum.NormalId.Left,
        Enum.NormalId.Right
    }    

    for _, normalId in pairs( allFaceNormalIds ) do
        -- If the two vectors are almost parallel,
        if self:GetNormalFromFace(part, normalId):Dot(normalVector) > TOLERANCE_VALUE then
            return normalId -- We found it!
        end
    end
    
    return nil -- None found within tolerance.

end

--[[**
    This function returns a vector representing the normal for the given
    face of the given part.

    @param part (BasePart) The part for which to find the normal of the given face.
    @param normalId (Enum.NormalId) The face to find the normal of.

    @returns (Vector3) The normal for the given face.
**--]]
function PlacementSystem:GetNormalFromFace(part, normalId)
    return part.CFrame:VectorToWorldSpace(Vector3.FromNormalId(normalId))
end

function PlacementSystem:TextureBase()
	local base = self.Tycoon.Model.Base

	base.Texture.Transparency = 0.8
	base.Material = Enum.Material.SmoothPlastic
end

function PlacementSystem:Cleanup()
	local base = self.Tycoon.Model.Base

	base.Texture.Transparency = 1
	base.Material = Enum.Material.Slate
end

return PlacementSystem
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="RemoteEvent" referent="RBX35EDF3A24D9F4DFEADEBB375951FF069">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Place</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="RemoteEvent" referent="RBX6B818CA22CAF4BA3A572DC80A414D31F">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Select</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX763F35A2CAC24FFB8AEE010E724D7879">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Placeables</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Model" referent="RBXA73E6B4704B94E8186CC28FBF7CC3179">
				<Properties>
					<BinaryString name="AttributesSerialize">AQAAAAIAAABJZAIIAAAARGVtb1BhcnQ=</BinaryString>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">DemoPart</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">RBX4A2ABC9E4A6242AAB40D4566373FD389</Ref>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags">UGxhY2VhYmxl</BinaryString>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>11.5</X>
							<Y>0.0999999866</Y>
							<Z>-93</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Model" referent="RBX4B16C4FD831D43DBBFF270CE119B26E9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">Model</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>13</X>
								<Y>0.499999046</Y>
								<Z>-90</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBX07F8C06A45C4424C9397EFAF941D5F04">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>13.5</X>
								<Y>0.50000006</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>3</X>
								<Y>1</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX7562313E0CDA49389683B6B195DA9711">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>13.5</X>
								<Y>1</Y>
								<Z>-93</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>4</X>
								<Y>2</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Model" referent="RBXA079BFD8E74F41C2A04FCF25C8EED5E1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">CollisionDetectors</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>13</X>
								<Y>1</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBX228205DCA582479395EEC4726FED3FA5">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>13.5</X>
								<Y>0.899999976</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294928076</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">CollisionDetector</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.599999905</X>
								<Y>1.79999995</Y>
								<Z>3.5999999</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX653EE96343F74FAF94C8EE971D2ADDB6">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>14.5</X>
								<Y>0.399999976</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294928076</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">CollisionDetector</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.599999905</X>
								<Y>0.800000012</Y>
								<Z>1.5999999</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXD65FE72A47D5413CA25D20A6836A4159">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>12.5</X>
								<Y>0.399999976</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294928076</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">CollisionDetector</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.599999905</X>
								<Y>0.800000012</Y>
								<Z>1.5999999</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX4A2ABC9E4A6242AAB40D4566373FD389">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>14</X>
							<Y>0.5</Y>
							<Z>-93</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4293782250</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<Ref name="MaterialVariant">null</Ref>
						<string name="Name">Hitbox</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>1</Y>
							<Z>2</Z>
						</Vector3>
					</Properties>
					<Item class="Motor6D" referent="RBX5115CFFEBC194DDE8DFCB9CF737911A9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>-0.5</X>
								<Y>5.96046448e-08</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">Part</string>
							<Ref name="Part0">RBX4A2ABC9E4A6242AAB40D4566373FD389</Ref>
							<Ref name="Part1">RBX07F8C06A45C4424C9397EFAF941D5F04</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Motor6D" referent="RBXE78207F53385499F84401AFDC7788F7D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>-0.5</X>
								<Y>0.5</Y>
								<Z>0</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">Part</string>
							<Ref name="Part0">RBX4A2ABC9E4A6242AAB40D4566373FD389</Ref>
							<Ref name="Part1">RBX7562313E0CDA49389683B6B195DA9711</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Motor6D" referent="RBX46BD905C75A64D35B9E6631012867879">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>-1.5</X>
								<Y>-0.100000024</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">CollisionDetector</string>
							<Ref name="Part0">RBX4A2ABC9E4A6242AAB40D4566373FD389</Ref>
							<Ref name="Part1">RBXD65FE72A47D5413CA25D20A6836A4159</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Motor6D" referent="RBX364FDDAB04704E78B0C9109C0C0B5F9F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>-0.5</X>
								<Y>0.399999976</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">CollisionDetector</string>
							<Ref name="Part0">RBX4A2ABC9E4A6242AAB40D4566373FD389</Ref>
							<Ref name="Part1">RBX228205DCA582479395EEC4726FED3FA5</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Motor6D" referent="RBX9F522F60E8A943FB80401148B840B0B9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>0.5</X>
								<Y>-0.100000024</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">CollisionDetector</string>
							<Ref name="Part0">RBX4A2ABC9E4A6242AAB40D4566373FD389</Ref>
							<Ref name="Part1">RBX653EE96343F74FAF94C8EE971D2ADDB6</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Model" referent="RBX02A37B7F17104316A923959E2D4A988F">
				<Properties>
					<BinaryString name="AttributesSerialize">AQAAAAIAAABJZAIJAAAARGVtb1BhcnQy</BinaryString>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">DemoPart2</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">RBX1F748CA8692242C5AD18ACEE9396BA67</Ref>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags">UGxhY2VhYmxl</BinaryString>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>21</X>
							<Y>0.0499999933</Y>
							<Z>-93</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Model" referent="RBXF540F72ADD544D688042104A534C4297">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">Model</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>21</X>
								<Y>0.499999046</Y>
								<Z>-90</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBXF6E0EFCDC6B54FB1BE229A2D0F0DE307">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>21</X>
								<Y>1</Y>
								<Z>-93</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>4</X>
								<Y>2</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXC129CB46CB984B59B840AA497171DECA">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>21</X>
								<Y>0.50000006</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>4</X>
								<Y>1</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Model" referent="RBXA1CA638C2EF74F6D9280AC9395BCAD83">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">CollisionDetectors</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>21</X>
								<Y>1</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBXC6CF100E6967489091DEC19844D44844">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>22.3999996</X>
								<Y>0.399999976</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294928076</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">CollisionDetector</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.799999952</X>
								<Y>0.800000012</Y>
								<Z>1.5999999</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX3BF1E2223722466AA8CFA2DE5DC1B993">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>21</X>
								<Y>0.899999976</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294928076</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">CollisionDetector</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>1.5999999</X>
								<Y>1.79999995</Y>
								<Z>3.5999999</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX45962259E3044D75A0C810C5DDE997BD">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>19.6000004</X>
								<Y>0.399999976</Y>
								<Z>-93</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294928076</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Ref name="MaterialVariant">null</Ref>
							<string name="Name">CollisionDetector</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.799999952</X>
								<Y>0.800000012</Y>
								<Z>1.5999999</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX1F748CA8692242C5AD18ACEE9396BA67">
					<Properties>
						<bool name="Anchored">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>21</X>
							<Y>0.5</Y>
							<Z>-93</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4293782250</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<Ref name="MaterialVariant">null</Ref>
						<string name="Name">Hitbox</string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">1</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>1</Y>
							<Z>2</Z>
						</Vector3>
					</Properties>
					<Item class="Motor6D" referent="RBXBD952CA564E04437824D00AC88457E75">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>0</X>
								<Y>5.96046448e-08</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">Part</string>
							<Ref name="Part0">RBX1F748CA8692242C5AD18ACEE9396BA67</Ref>
							<Ref name="Part1">RBXC129CB46CB984B59B840AA497171DECA</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Motor6D" referent="RBX77731C239782403886214F1E4C3815F1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>0</X>
								<Y>0.5</Y>
								<Z>0</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">Part</string>
							<Ref name="Part0">RBX1F748CA8692242C5AD18ACEE9396BA67</Ref>
							<Ref name="Part1">RBXF6E0EFCDC6B54FB1BE229A2D0F0DE307</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Motor6D" referent="RBXA7B7320B41E74374832914EBBB6E1ECB">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>-1.39999962</X>
								<Y>-0.100000024</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">CollisionDetector</string>
							<Ref name="Part0">RBX1F748CA8692242C5AD18ACEE9396BA67</Ref>
							<Ref name="Part1">RBX45962259E3044D75A0C810C5DDE997BD</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Motor6D" referent="RBX7F768493311E4169A36EB33E7EB0CC1A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>0</X>
								<Y>0.399999976</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">CollisionDetector</string>
							<Ref name="Part0">RBX1F748CA8692242C5AD18ACEE9396BA67</Ref>
							<Ref name="Part1">RBX3BF1E2223722466AA8CFA2DE5DC1B993</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Motor6D" referent="RBX8A76909F629243C2A6B735E7246AD640">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<CoordinateFrame name="C0">
								<X>1.39999962</X>
								<Y>-0.100000024</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="DesiredAngle">0</float>
							<bool name="Enabled">true</bool>
							<float name="MaxVelocity">0</float>
							<string name="Name">CollisionDetector</string>
							<Ref name="Part0">RBX1F748CA8692242C5AD18ACEE9396BA67</Ref>
							<Ref name="Part1">RBXC6CF100E6967489091DEC19844D44844</Ref>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBX7D2461AF30F540DAB08F9DC8C6D6C84A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBXEF256D92B3FB4F12848440A27DD738D3">
		<Properties>
			<Color3 name="Ambient">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="Brightness">2</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="EnvironmentDiffuseScale">0</float>
			<float name="EnvironmentSpecularScale">0</float>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.75</R>
				<G>0.75</G>
				<B>0.75</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.5</R>
				<G>0.5</G>
				<B>0.5</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<float name="ShadowSoftness">0.5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">1</token>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXA1C5078A0D674C41A0D2324609A339DC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="HttpEnabled">true</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="LanguageService" referent="RBXFC0CDA8F18854771B5B8F2484BF0DD38">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">LanguageService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBXB898210D0E0A47338DEDF9B8E074639F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<bool name="Is30FpsThrottleEnabled">true</bool>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<double name="Timeout">10</double>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBX9089EC8BC0AD452AA07F62CE1157CF83">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="Enabled">true</bool>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>